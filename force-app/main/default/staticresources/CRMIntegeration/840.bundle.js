(self.webpackChunkcrm_integration=self.webpackChunkcrm_integration||[]).push([[840],{34346:function(e,t,n){"use strict";var c=n(87537),a=n.n(c),i=n(23645),s=n.n(i)()(a());s.push([e.id,".records-crm-table-top-container .page-no-container{display:flex;margin-right:10px;justify-content:flex-end}","",{version:3,sources:["webpack://./src/app/features/subscriptions/components/records-table/RecordsTable.scss"],names:[],mappings:"AAEI,oDACI,YAAA,CACA,iBAAA,CACA,wBAAA",sourcesContent:[".records-crm-table-top-container{\r\n    \r\n    .page-no-container{\r\n        display: flex;\r\n        margin-right: 10px;\r\n        justify-content: flex-end;\r\n\r\n    }  \r\n}"],sourceRoot:""}]),t.Z=s},38153:function(e){e.exports='<svg class="svg-icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M535.630769 821.169231l-41.353846-5.907693s-27.569231-5.907692-41.353846-11.815384c-7.876923-1.969231-17.723077 0-23.630769 5.907692l-9.846154 9.846154c-57.107692 57.107692-149.661538 63.015385-208.738462 11.815385-66.953846-57.107692-68.923077-159.507692-7.876923-220.553847l149.661539-149.661538c19.692308-19.692308 43.323077-31.507692 66.953846-39.384615 31.507692-7.876923 64.984615-5.907692 94.523077 5.907692 17.723077 7.876923 35.446154 17.723077 51.2 33.476923 7.876923 7.876923 13.784615 15.753846 19.692307 25.6 7.876923 13.784615 25.6 15.753846 35.446154 3.938462l55.138462-55.138462c7.876923-7.876923 7.876923-19.692308 1.969231-29.538462-7.876923-11.815385-17.723077-21.661538-27.569231-31.507692-13.784615-13.784615-29.538462-27.569231-47.261539-37.415384-27.569231-17.723077-59.076923-29.538462-92.553846-35.446154-61.046154-11.815385-128-1.969231-183.138461 27.56923-21.661538 11.815385-43.323077 27.569231-61.046154 45.292308l-143.753846 143.753846C17.723077 622.276923 9.846154 791.630769 110.276923 897.969231c104.369231 114.215385 281.6 116.184615 389.907692 7.876923l49.23077-49.230769c13.784615-9.846154 3.938462-33.476923-13.784616-35.446154zM897.969231 114.215385c-108.307692-100.430769-277.661538-92.553846-380.061539 11.815384L472.615385 169.353846c-13.784615 13.784615-3.938462 37.415385 13.784615 39.384616 27.569231 1.969231 55.138462 7.876923 82.707692 15.753846 7.876923 1.969231 17.723077 0 23.63077-5.907693l9.846153-9.846153c57.107692-57.107692 149.661538-63.015385 208.738462-11.815385 66.953846 57.107692 68.923077 159.507692 7.876923 220.553846L669.538462 567.138462c-19.692308 19.692308-43.323077 31.507692-66.953847 39.384615-31.507692 7.876923-64.984615 5.907692-94.523077-5.907692-17.723077-7.876923-35.446154-17.723077-51.2-33.476923-7.876923-7.876923-13.784615-15.753846-19.692307-25.6-7.876923-13.784615-25.6-15.753846-35.446154-3.938462l-55.138462 55.138462c-7.876923 7.876923-7.876923 19.692308-1.96923 29.538461 7.876923 11.815385 17.723077 21.661538 27.56923 31.507692 13.784615 13.784615 31.507692 27.569231 47.261539 37.415385 27.569231 17.723077 59.076923 29.538462 90.584615 35.446154 61.046154 11.815385 128 1.969231 183.138462-27.569231 21.661538-11.815385 43.323077-27.569231 61.046154-45.292308l149.661538-149.661538c110.276923-108.307692 106.338462-285.538462-5.907692-389.907692z"></path></svg>'},33484:function(e){e.exports='<svg xmlns="http://www.w3.org/2000/svg" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" class="svg-icon" viewBox="0 0 52 52"><g><path d="M26.1,19.1c-3.9,0-7,3.1-7,7s3.1,7,7,7s7-3.1,7-7S30,19.1,26.1,19.1z"></path><path d="M47.1,32.4l-3.7-3.1c0.2-1.1,0.3-2.3,0.3-3.4c0-1.1-0.1-2.3-0.3-3.4l3.7-3.1c1.2-1,1.6-2.8,0.8-4.2 l-1.6-2.8c-0.6-1-1.7-1.6-2.9-1.6c-0.4,0-0.8,0.1-1.1,0.2l-4.6,1.7c-1.8-1.6-3.8-2.7-5.9-3.4L31,4.6c-0.3-1.6-1.7-2.5-3.3-2.5h-3.2 c-1.6,0-3,0.9-3.3,2.5l-0.8,4.6c-2.2,0.7-4.2,1.9-6,3.4l-4.6-1.7c-0.4-0.1-0.7-0.2-1.1-0.2c-1.2,0-2.3,0.6-2.9,1.6l-1.6,2.8 c-0.8,1.4-0.5,3.2,0.8,4.2l3.7,3.1c-0.2,1.1-0.3,2.3-0.3,3.4c0,1.2,0.1,2.3,0.3,3.4L5,32.3c-1.2,1-1.6,2.8-0.8,4.2l1.6,2.8 c0.6,1,1.7,1.6,2.9,1.6c0.4,0,0.8-0.1,1.1-0.2l4.6-1.7c1.8,1.6,3.8,2.7,5.9,3.4l0.8,4.8c0.3,1.6,1.6,2.7,3.3,2.7h3.2 c1.6,0,3-1.2,3.3-2.8l0.8-4.8c2.3-0.8,4.4-2,6.2-3.7l4.3,1.7c0.4,0.1,0.8,0.2,1.2,0.2c1.2,0,2.3-0.6,2.9-1.6l1.5-2.6 C48.7,35.2,48.3,33.4,47.1,32.4z M26.1,37.1c-6.1,0-11-4.9-11-11s4.9-11,11-11s11,4.9,11,11S32.2,37.1,26.1,37.1z"></path></g></svg>'},22948:function(e,t,n){"use strict";n.d(t,{r:function(){return s}});var c=n(85893),a=n(1079),i=function(){return i=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},i.apply(this,arguments)};function s(e){var t=e.href,n=e.text,s=e.target,l=void 0===s?"_blank":s;return(0,c.jsx)("div",i({className:"link-container"},{children:(0,c.jsx)(a.Z,i({className:"link",href:t,target:l},{children:n}))}))}},74840:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return Yt}});var c=n(85893),a=n(15725),i=n(50503),s=n(67294),l=n(22327),r=n(1435),o=n(60343),u=n(84475),d=n(22948),p=n(27304),f=n(30808),m=n(16828),h=n(73935),g=n(61974),v=n(64666),b=n(37645),_=n(6867),x=n(88979),y=n(54718),j=n(45697),C=n.n(j),w=n(50594),N=n(77750),S=n(90506),k=n(72580),A=n(21588),O=function(){return O=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},O.apply(this,arguments)},T=n(90952),Z=n(93860),R=n(89204),I=function(){return I=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},I.apply(this,arguments)},F=function(e,t){var n={};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&t.indexOf(c)<0&&(n[c]=e[c]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(c=Object.getOwnPropertySymbols(e);a<c.length;a++)t.indexOf(c[a])<0&&Object.prototype.propertyIsEnumerable.call(e,c[a])&&(n[c[a]]=e[c[a]])}return n},E=function(e,t,n){if(n||2===arguments.length)for(var c,a=0,i=t.length;a<i;a++)!c&&a in t||(c||(c=Array.prototype.slice.call(t,0,a)),c[a]=t[a]);return e.concat(c||Array.prototype.slice.call(t))},D=(0,g.ZP)(v.Z)((function(e){var t=e.theme;return{"& .MuiDialogContent-root":{padding:t.spacing(2)},"& .MuiDialogActions-root":{padding:t.spacing(1)}}}));function P(e){var t=e.children,n=e.onClose,a=F(e,["children","onClose"]);return(0,c.jsxs)(b.Z,I({sx:{m:0,p:2}},a,{children:[t,n?(0,c.jsx)(_.Z,I({"aria-label":"close",onClick:n,sx:{position:"absolute",right:8,top:8,color:function(e){return e.palette.grey[500]}}},{children:(0,c.jsx)(w.Z,{})})):null]}))}P.propTypes={children:C().node,onClose:C().func.isRequired};var B=function(e){var t=e.onClose,n=e.account_row,a=(0,l.$)().t,i=(0,s.useState)(!0),u=i[0],d=i[1],f=(0,r.CG)(o.c7),m=(0,s.useState)({}),h=m[0],g=m[1],v=(0,s.useState)(0),b=(v[0],v[1]),_=(0,s.useState)(Gt),j=_[0],C=_[1],w=(0,s.useState)(-1),F=w[0],B=w[1],M=(0,r.CG)(T.OY),L=function(){t()},V=(0,s.useMemo)((function(){return{client_id:f,module:k.VB.contact,dc_plan_access_flag:M||!1,record_type:"Contacts",get_subscription:!0,filters:h}}),[f,M,h]),$=(0,s.useState)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1","/dakota"),body:JSON.stringify(V),headers:(0,S.Ry)(f)}),G=$[0],z=$[1];return(0,s.useEffect)((function(){z(I(I({},G),{body:JSON.stringify(V)}))}),[V]),(0,s.useEffect)((function(){g({filter:[{$and:[{accountid:{$equals:n.account_id}}]}],fields:E([],k.dv,!0),max_num:-1})}),[n.account_id]),(0,c.jsxs)("div",{children:[u?(0,c.jsxs)("div",I({className:"spinner"},{children:[" ",(0,c.jsx)(y.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]})):null,(0,c.jsxs)(D,I({onClose:L,"aria-labelledby":"customized-dialog-title",open:!0,className:"link-view-top-container-single"},{children:[(0,c.jsx)(P,I({onClose:L},{children:(0,c.jsx)("div",I({className:"main-title"},{children:"Add Account With Related Contact(s)"}))})),(0,c.jsxs)(N.Z,{children:[!u&&0!==F&&-1!==F&&(0,c.jsxs)("p",I({className:"subtitle"},{children:["There are ",(0,c.jsx)("strong",{children:"".concat(F)})," Contact(s) associated with",(0,c.jsx)("strong",{children:" ".concat(n.name,".")})," Select Contact(s) to add:-"]})),0!==F&&(0,c.jsx)(Z.p,{title:"",columns:[{name:"Name",cell:function(e){var t=e.full_name||"";return(0,c.jsx)("div",O({className:"cell-container"},{children:(0,c.jsx)(p.Z,O({placement:"right",title:t},{children:(0,c.jsx)("p",{children:t})}))}))}},{name:"Title",cell:function(e){return(0,c.jsx)("div",O({className:"cell-container"},{children:(0,c.jsx)(p.Z,O({placement:"right",title:e.title||""},{children:(0,c.jsx)("p",{children:e.title})}))}))}},{name:"Email",cell:function(e){return(0,c.jsx)("div",O({className:"cell-container"},{children:(0,c.jsx)(p.Z,O({placement:"right",title:e.email1||""},{children:(0,c.jsx)("p",{children:e.email1})}))}))}},{name:"Phone",cell:function(e){return(0,c.jsx)("div",O({className:"cell-container"},{children:(0,c.jsx)(p.Z,O({placement:"right",title:e.phone_work||""},{children:(0,c.jsx)("p",{children:e.phone_work})}))}))}}],requestData:G,dataPath:"records",page:0,setPage:function(){},isLoading:function(e){d(e)},loadData:!0,singlePageOnly:!0,selectableRows:!0,setSelectedRows:C,onSinglePageCountChange:b,conditionalRowStyles:[{when:function(e){return"t"===e.subscription_status&&R.Eg.includes(e.gear_status)},classNames:["display-none"]}],setTotalCount:function(e){B(e)},isSingleLink:!0}),0===F&&(0,c.jsx)("p",I({className:"subtitle",style:{textAlign:"center"}},{children:"No Related Contact(s) available to Insert"}))]}),(0,c.jsxs)(x.Z,I({sx:{background:"#F3F2F2"}},{children:[(0,c.jsx)(A.z,{onClick:L,className:"detail-view-footer",text:a("modal.cancel")}),F>0&&(0,c.jsx)(A.z,{onClick:function(){var e=new CustomEvent("dci-subscribe-record",{detail:j.selectedRows.map((function(e){return{recordId:e.id,sfid:e.contact_id,subscribe:!0,eventModule:k.VB.contact,isFromCreateAccountAndRelatedContact:!0,alertCreateAccountAndRelatedContact:!0,totalAccountRecords:1,gear_status:e.gear_status,crudType:"CARC"}}))});window.dispatchEvent(e),L()},className:"detail-view-footer",text:a("modal.add_account_and_related_contacts"),isDisabled:0===j.selectedCount})]}))]}))]})},M=n(38153),L=n.n(M),V=n(34934),$=function(e,t){if(!t)return e;if(0===t.length)return e;if(!e)return"";if(!["United States","USA","US"].includes(t))return e;var n=e.replace(/\D/g,"");return 9===n.length?e:10===n.length?n.startsWith("1")?"(".concat(n.slice(1,4),") ").concat(n.slice(4,7),"-").concat(n.slice(7)):"(".concat(n.slice(0,3),") ").concat(n.slice(3,6),"-").concat(n.slice(6)):11===n.length&&n.startsWith("1")?"(".concat(n.slice(1,4),") ").concat(n.slice(4,7),"-").concat(n.slice(7)):e},G=n(75986),z=n(33484),U=n.n(z),q=function(){return q=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},q.apply(this,arguments)},H=Intl.NumberFormat("en-US");function W(e,t,n){var c={id:t,module:n,showModal:!0,name:"".concat(n.charAt(0).toUpperCase()+n.slice(1),": ").concat(e)};f.h.dispatch((0,m.IW)(c))}var Q=function(e){var t=R.Mo.includes(e.gear_status);return"t"===e.subscription_status&&t&&e.reference_id?"Updating":e.gear_status},Y=function(e,t,n){var c=R.Mo.includes(t);return"t"===e&&c&&n?"Updating":t},J=function(e){var t=R.Eg.includes(e.gear_status),n=R.zV.includes(e.gear_status),a=(R.nV.includes(e.gear_status),R.er.includes(e.gear_status),R.Mo.includes(e.gear_status)),i=R.Ht.includes(e.gear_status);return"t"===e.subscription_status?a&&e.reference_id?(0,c.jsx)("div",q({className:"link_icon"},{children:(0,c.jsx)(V.Z,{src:L(),className:"link_icon link_icon_created"})})):i&&e.reference_id||t&&!e.reference_id?(0,c.jsx)("div",q({className:"link_icon"},{children:(0,c.jsx)(V.Z,{src:U(),className:"link_icon link_icon_syncing"})})):n?(0,c.jsx)("div",q({className:"link_icon"},{children:(0,c.jsx)(V.Z,{src:L(),className:"link_icon link_icon_created"})})):(0,c.jsx)("div",q({className:"link_icon"},{children:(0,c.jsx)("span",{className:"related_accounts_empty_icon"})})):("f"===e.subscription_status||e.subscription_status,(0,c.jsx)("span",{className:"empty_icon_space"}))},K=function(e,t,n){var a=R.Eg.includes(t),i=R.zV.includes(t),s=R.nV.includes(t),l=R.er.includes(t),r=R.Mo.includes(t),o=R.Ht.includes(t),u=null;return i||r&&n?u=(0,c.jsx)(V.Z,{src:L(),className:"link_icon link_icon_created"}):o&&n||a&&!n?u=(0,c.jsx)(V.Z,{src:U(),className:"link_icon link_icon_syncing"}):(s||null===t||l)&&(u=(0,c.jsx)("span",{className:"related_accounts_empty_icon"})),s||null===t||l?(0,c.jsx)("div",q({className:"link_icon"},{children:u})):(0,c.jsx)(p.Z,q({placement:"right",title:Y(e,t,n)},{children:(0,c.jsx)("div",q({className:"link_icon"},{children:u}))}))},X=[{name:"Account Name",cell:function(e){return(0,c.jsxs)("div",q({className:"cell-container"},{children:[(0,c.jsx)("span",q({className:"linked-icon-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:Q(e)},{children:J(e)}))})),(0,c.jsx)(p.Z,q({placement:"right",title:e.name},{children:(0,c.jsx)("p",q({onClick:function(){W(e.name,e.account_id,"account")},className:"underline"},{children:e.name}))}))]}))},width:"20%",sortable:!0,sortField:"name"},{name:"AUM",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:"$".concat(H.format(Number(e.dft_aum_c)))},{children:(0,c.jsx)("p",q({className:"currency"},{children:"$".concat(H.format(Number(e.dft_aum_c)))}))}))}))},width:"15%",sortable:!0,sortField:"aum__c"},{name:"City",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.billing_address_city},{children:(0,c.jsx)("p",{children:e.billing_address_city})}))}))},width:"7.5%",sortable:!0,sortField:"billingcity"},{name:"State",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.billing_address_state},{children:(0,c.jsx)("p",{children:e.billing_address_state})}))}))},width:"7.5%",sortable:!0,sortField:"billingstate"},{name:"Metro Area",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.rt_metroareas_accounts_name},{children:(0,c.jsx)("p",{children:e.rt_metroareas_accounts_name})}))}))},width:"10%",sortable:!0,sortField:"metro_area_name__c"},{name:"Type",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.account_type},{children:(0,c.jsx)("p",{children:e.account_type})}))}))},width:"10%",sortable:!0,sortField:"type"},{name:"Phone",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:$(e.phone_office,e.billing_address_country)},{children:(0,c.jsx)("p",{children:$(e.phone_office,e.billing_address_country)})}))}))},width:"10%",sortable:!0,sortField:"phone"},{name:"Website",selector:function(e){return e.website},cell:function(e){return(0,c.jsx)(d.r,{href:e.website,text:e.website})},width:"10%",sortable:!0,sortField:"website"},{name:"Action",cell:function(e){return(0,c.jsx)(te,{row:e,module:"account"})},width:"2.5%",center:!0}],ee=[{name:"Contact Name",cell:function(e){return(0,c.jsxs)("div",q({className:"cell-container"},{children:[(0,c.jsxs)("span",q({className:"linked-icon-container"},{children:[!R.er.includes(e.gear_status)&&K(e.subscription_status,e.gear_status,e.reference_id),R.er.includes(e.gear_status)&&(0,c.jsx)("span",{className:"related_accounts_empty_icon"})]})),(0,c.jsx)(p.Z,q({placement:"right",title:e.full_name},{children:(0,c.jsx)("p",q({onClick:function(){W(e.full_name,e.contact_id,"contact")},className:"underline"},{children:e.full_name}))}))]}))},width:"20%",sortable:!0,sortField:"name"},{name:"Acount Name",cell:function(e){return(0,c.jsxs)("div",q({className:"cell-container"},{children:[(0,c.jsx)("span",q({className:"linked-icon-container"},{children:K(e.is_account_subscribed,e.related_account_gear_status,e.is_account_reference_id)})),(0,c.jsx)(p.Z,q({placement:"right",title:e.account_name},{children:(0,c.jsx)("p",q({onClick:function(){W(e.account_name,e.contact_account_id,"account")},className:"underline"},{children:e.account_name}))}))]}))},width:"15%",sortable:!0,sortField:"account_name__c"},{name:"Title",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.title},{children:(0,c.jsx)("p",{children:e.title})}))}))},width:"10%",sortable:!0,sortField:"title"},{name:"Coverage Area",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.coverage_area_c},{children:(0,c.jsx)("p",{children:e.coverage_area_c})}))}))},width:"10%",sortable:!0,sortField:"asset_class_coverage__c"},{name:"City",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.primary_address_city},{children:(0,c.jsx)("p",{children:e.primary_address_city})}))}))},width:"7.5%",sortable:!0,sortField:"mailingcity"},{name:"State",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.primary_address_state},{children:(0,c.jsx)("p",{children:e.primary_address_state})}))}))},width:"7.5%",sortable:!0,sortField:"mailingstate"},{name:"Metro Area",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.rt_metroareas_contacts_name},{children:(0,c.jsx)("p",{children:e.rt_metroareas_contacts_name})}))}))},width:"10%",sortable:!0,sortField:"metro_area_name__c"},{name:"Email",cell:function(e){return(0,c.jsx)("div",q({className:"cell-container"},{children:(0,c.jsx)(p.Z,q({placement:"right",title:e.email1},{children:(0,c.jsx)("p",{children:e.email1})}))}))},width:"10%",sortable:!0,sortField:"email"},{name:"Action",cell:function(e){return(0,c.jsx)(te,{row:e,module:"contact"})},width:"2.5%",center:!0}],te=function(e){var t,n=e.row,a=e.module,i=(0,l.$)().t,o=(0,r.TL)(),d=(0,s.useState)(!1),p=d[0],f=d[1],m=(0,s.useState)(!1),g=m[0],v=m[1],b=(0,s.useState)(!1),_=b[0],x=b[1],y=R.nV.includes(n.gear_status),j=(R.er.includes(n.gear_status),R.Eg.includes(n.gear_status)),C=R.Mo.includes(n.gear_status),w=R.Ht.includes(n.gear_status),N="t"===n.subscription_status,S=[{name:"",value:"",isDisabled:!1}];return S=S.filter((function(e){return""!==e.name})),N&&S.push({name:"Unlink ".concat("account"===a?"Account":"Contact"),value:"unlink",isDisabled:!1}),N||y||(S.push({name:"Create ".concat("account"===a?"Account":"Contact"),value:"create",isDisabled:!1}),"account"===a&&S.push({name:"Create Account & Related Contacts",value:"create-account-and-related-contacts",isDisabled:!1}),S.push({name:"Link ".concat("account"===a?"Account":"Contact"),value:"link",isDisabled:!1})),N&&j&&!n.reference_id&&-1!==(t=S.findIndex((function(e){return e.name==="Unlink ".concat("account"===a?"Account":"Contact")})))&&(S[t].isDisabled=!0),N&&C&&n.reference_id&&-1!==(t=S.findIndex((function(e){return e.name==="Unlink ".concat("account"===a?"Account":"Contact")})))&&(S[t].isDisabled=!1),N&&w&&n.reference_id&&(S.push({name:"Create ".concat("account"===a?"Account":"Contact"),value:"create",isDisabled:!0}),"account"===a&&S.push({name:"Create Account & Related Contacts",value:"create-account-and-related-contacts",isDisabled:!0}),S.push({name:"Link ".concat("account"===a?"Account":"Contact"),value:"link",isDisabled:!0}),S=S.filter((function(e){return e.name!=="Unlink ".concat("account"===a?"Account":"Contact")}))),y&&(S.push({name:"Create ".concat("account"===a?"Account":"Contact"),value:"create",isDisabled:!1}),"account"===a&&S.push({name:"Create Account & Related Contacts",value:"create-account-and-related-contacts",isDisabled:!1}),S.push({name:"Link ".concat("account"===a?"Account":"Contact"),value:"link",isDisabled:!1}),S=S.filter((function(e){return e.name!=="Unlink ".concat("account"===a?"Account":"Contact")}))),(0,c.jsxs)("div",q({style:{display:"flex",position:"relative",left:"0.5rem"}},{children:[(0,c.jsx)(u.L,{title:"",value:"",options:S,onChange:function(e){if("unlink"===e)v(!0);else if("create"===e)if(N)N&&y?(t=new CustomEvent("dci-subscribe-record",{detail:[{recordId:n.id,sfid:"account"===a?n.account_id:n.contact_id,subscribe:!N,gear_status:"Linking failed"===n.gear_status?"Subscribe":n.gear_status,crudType:"Create"}]}),window.dispatchEvent(t)):!N||n.gear_status||n.reference_id||(t=new CustomEvent("dci-subscribe-record",{detail:[{recordId:n.id,sfid:"account"===a?n.account_id:n.contact_id,subscribe:!N,gear_status:"Linking failed"===n.gear_status?"Subscribe":n.gear_status,crudType:"Create"}]}),window.dispatchEvent(t));else{var t=new CustomEvent("dci-subscribe-record",{detail:[{recordId:n.id,sfid:"account"===a?n.account_id:n.contact_id,subscribe:!N,gear_status:"Linking failed"===n.gear_status?"Subscribe":n.gear_status,crudType:"Create"}]});window.dispatchEvent(t)}else"link"===e?o.setSingleLinkModalData({showModal:!0,sfid:"account"===a?n.account_id:n.contact_id,module:a,name:"account"===a?n.name:n.full_name,gear_status:n.gear_status,crudType:"Link",phone:"account"===a?n.phone_office:"",crd_number_c:"account"===a?n.crd_number_c:"",email:"account"===a?"":n.email1}):"create-account-and-related-contacts"===e&&f(!0)}}),(0,c.jsx)(G.Z,{open:g,onClose:function(){v(!1)},onAction:function(){if(!_){x(!0),v(!1);var e=new CustomEvent("dci-subscribe-record",{detail:[{recordId:n.id,sfid:"account"===a?n.account_id:n.contact_id,subscribe:!N,gear_status:n.gear_status,crudType:"Unlink"}]});window.dispatchEvent(e)}},description:"account"===a?"".concat(i("subscriptions.unlink-single-dialog-description")," ").concat(n.name," ").concat(a,"?"):"".concat(i("subscriptions.unlink-single-dialog-description")," ").concat(n.full_name," ").concat(a,"?"),title:i("subscriptions.unlink-dialog-title"),type:"unlink"}),p&&h.createPortal((0,c.jsx)(B,{onClose:function(){f(!1)},account_row:n}),document.getElementById("modal-root"))]}))},ne=n(75133),ce=n(93379),ae=n.n(ce),ie=n(7795),se=n.n(ie),le=n(90569),re=n.n(le),oe=n(3565),ue=n.n(oe),de=n(19216),pe=n.n(de),fe=n(44589),me=n.n(fe),he=n(34346),ge={};ge.styleTagTransform=me(),ge.setAttributes=ue(),ge.insert=re().bind(null,"head"),ge.domAPI=se(),ge.insertStyleElement=pe(),ae()(he.Z,ge),he.Z&&he.Z.locals&&he.Z.locals;var ve=n(10762),be=function(){return be=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},be.apply(this,arguments)},_e=function(e,t,n){if(n||2===arguments.length)for(var c,a=0,i=t.length;a<i;a++)!c&&a in t||(c||(c=Array.prototype.slice.call(t,0,a)),c[a]=t[a]);return e.concat(c||Array.prototype.slice.call(t))};function xe(e){var t=e.module,n=e.totalRows,a=e.requestBody,i=e.setRequestBody,u=e.clearSelection,d=e.setSelection,p=e.sortBy,f=e.setSortBy,m=e.emptyData,h=e.isLoading,g=void 0===h?function(){}:h,v=e.additionalFields,b=e.paginationPerPage,_=(0,r.CG)(o.US).records_per_page,x=(0,s.useState)(_),y=x[0],j=x[1],C=(0,l.$)().t,w=(0,s.useState)(a.filters.offset),N=w[0],A=w[1],O=(0,r.CG)(o.dy),Z=O.id,R=O.additionalSettings,I=(0,s.useState)(Math.ceil(n/_)),F=I[0],E=I[1],D=(0,s.useState)(!1),P=D[0],B=D[1],M=(0,r.TL)(),L=t===k.VB.account?X:ee,V=(0,r.CG)(T.J4),$=(0,s.useState)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1","/dakota"),body:JSON.stringify(a),headers:(0,S.Ry)(Z)}),G=$[0],z=$[1];(0,r.N7)((function(){z(be(be({},G),{body:JSON.stringify(a),headers:(0,S.Ry)(Z)}))}),[a]),(0,r.N7)((function(){i(be(be({},a),{module:t,filters:be(be({},a.filters),{fields:t===k.VB.account?_e(_e([],k.GA,!0),v,!0):_e(_e([],k.HU,!0),v,!0),order_by:t===k.VB.account?"".concat(X[p.account.columnId-1].sortField,":").concat(p.account.order,",").concat(zt):"".concat(ee[p.contact.columnId-1].sortField,":").concat(p.contact.order,",").concat(zt),offset:_*(N-1)})}))}),[N]),(0,r.N7)((function(){i(be(be({},a),{module:t,filters:be(be({},a.filters),{fields:t===k.VB.account?_e(_e([],k.GA,!0),v,!0):_e(_e([],k.HU,!0),v,!0),order_by:a.module===k.VB.account?"".concat(X[p.account.columnId-1].sortField,":").concat(p.account.order,",").concat(zt):"".concat(ee[p.contact.columnId-1].sortField,":").concat(p.contact.order,",").concat(zt),offset:0})}))}),[p]);var U=(0,s.useCallback)((function(e,t,n){var c;f(be(be({},p),((c={})[a.module===k.VB.account?k.VB.account:k.VB.contact]={columnId:Number(e.id),order:t},c)))}),[a.module,f,p]);return(0,s.useEffect)((function(){0===a.filters.offset&&A(1)}),[a.filters.offset]),(0,s.useEffect)((function(){V&&i(be(be({},a),{module:t,filters:be(be({},a.filters),{fields:t===k.VB.account?_e(_e([],k.GA,!0),v,!0):_e(_e([],k.HU,!0),v,!0),order_by:t===k.VB.account?"".concat(X[p.account.columnId-1].sortField,":").concat(p.account.order,",").concat(zt):"".concat(ee[p.contact.columnId-1].sortField,":").concat(p.contact.order,",").concat(zt),offset:_*(N-1)})})),M.setIsRefreshButtonClicked(!1)}),[V]),(0,s.useEffect)((function(){E(Math.ceil(n/_))}),[N,_,n]),(0,s.useEffect)((function(){B(!1),A(1)}),[t,a.filters.filter]),(0,r.N7)((function(){b&&b(y),a.filters.max_num=y;var e=R.autoSync,t=R.notifyFieldChanges,n=R.receiveTechnicalEmails,c=R.logs_per_page,i=R.logs_inventory_per_page;M.saveAdditionalSettings({autoSync:e,notifyFieldChanges:t,receiveTechnicalEmails:n,records_per_page:y,logs_per_page:c,logs_inventory_per_page:i})}),[a.filters.max_num,y]),(0,c.jsx)("div",be({className:"records-crm-table-top-container"},{children:(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(ne.P,{tableKey:a.module,title:"",columns:L,requestData:G,dataPath:"records",loadData:Boolean(Z),totalCount:n,setSelectedRows:d,selectableRows:!0,clearSelection:u,defaultSortAsc:t===k.VB.account?"asc"===p.account.order:"asc"===p.contact.order,defaultSortFieldId:t===k.VB.account?p.account.columnId:p.contact.columnId,noRecordFoundMessage:(0,c.jsx)("p",be({style:{marginTop:"20%"}},{children:C("subscriptions.no-record-found",{module:a.module})})),emptyData:m,page:N,onSort:U,setPage:A,isLoading:g,dataFetched:function(e){0===e.length?B(!1):B(!0)},paginationPerPage:function(e){j(e)}}),P&&(0,c.jsx)("div",be({className:"page-no-container"},{children:(0,c.jsx)(ve.Z,{page:N,lastPage:F,handlePageNumber:function(e){A(e)}})}))]})}))}var ye,je,Ce=n(9687),we=n(85594),Ne=function(e){var t=e.accountTypeOptions,n=e.metroOptions,c=e.stateOptions,a=e.contactAccountTypeOptions,i=e.assetClassCoverageOption,s=e.contactTypeOptions,l=e.mailingStateOptions,r=e.contactMetroAreaNameOptions,o=e.marketPlaceCreatedDateOptions;return{account:{name:{fieldId:"name",filterId:"name",fieldName:"Account Name",filterFieldType:"text-input",queryType:"$contains",placeholder:"Account Name"},crd__c:{fieldId:"crd__c",filterId:"crd__c",fieldName:"CRD Number",filterFieldType:"text-input",queryType:"$equals",placeholder:"CRD Number"},aum__from:{fieldId:"aum__c",filterId:"aum__from",fieldName:"AUM From",filterFieldType:"number-input",queryType:"$gt",placeholder:"$"},aum__to:{fieldId:"aum__c",filterId:"aum__to",fieldName:"AUM To",filterFieldType:"number-input",queryType:"$lt",placeholder:"$"},type:{fieldId:"type",filterId:"type",fieldName:"Account Type",filterFieldType:"multiselect-dropdown",queryType:"$in",options:t,placeholder:"Select Type(s)"},metro_area_name__c:{fieldId:"metro_area_name__c",filterId:"metro_area_name__c",fieldName:"Metro Area",filterFieldType:"multiselect-dropdown",queryType:"$in",options:n,placeholder:"Select Metro Area(s)"},billingstate:{fieldId:"billingstate",filterId:"billingstate",fieldName:"State",filterFieldType:"multiselect-dropdown",queryType:"$in",options:c,placeholder:"Select State(s)"},createddate:{fieldId:"createddate",filterId:"createddate",fieldName:"Marketplace Created Date",filterFieldType:"dateRangeDropdown",queryType:"$between",options:o},"subscriptions1.subscribed":{fieldId:"subscriptions1.subscribed",filterId:"subscriptions1.subscribed",fieldName:"Display Criteria",filterFieldType:"dropdown",queryType:"$in",options:e.dispayCriteriaOptionsAccount}},contact:{name:{fieldId:"name",filterId:"name",fieldName:"Contact Name",filterFieldType:"text-input",queryType:"$contains",placeholder:"Contact Name"},account_name__c:{fieldId:"account_name__c",filterId:"account_name__c",fieldName:"Account Name",filterFieldType:"text-input",queryType:"$contains",placeholder:"Account Name"},asset_class_coverage__c:{fieldId:"asset_class_coverage__c",filterId:"asset_class_coverage__c",fieldName:"Asset Class Coverage",filterFieldType:"multiselect-dropdown",queryType:"$in",options:i,placeholder:"Select Coverage Area(s)"},mailingstate:{fieldId:"mailingstate",filterId:"mailingstate",fieldName:"State",filterFieldType:"multiselect-dropdown",queryType:"$in",options:l,placeholder:"Select State(s)"},metro_area_name__c:{fieldId:"metro_area_name__c",filterId:"metro_area_name__c",fieldName:"Metro Area",filterFieldType:"multiselect-dropdown",queryType:"$in",options:r,placeholder:"Select Metro Area(s)"},contact_type__c:{fieldId:"contact_type__c",filterId:"contact_type__c",fieldName:"Contact Type",filterFieldType:"multiselect-dropdown",queryType:"$in",options:s,placeholder:"Select Type(s)"},account_type__c:{fieldId:"account_type__c",filterId:"account_type__c",fieldName:"Account Type",filterFieldType:"multiselect-dropdown",queryType:"$in",options:a,placeholder:"Select Type(s)"},email:{fieldId:"email",filterId:"email",fieldName:"Email",filterFieldType:"text-input",queryType:"$contains",placeholder:"Contact Email"},createddate:{fieldId:"createddate",filterId:"createddate",fieldName:"Marketplace Created Date",filterFieldType:"dateRangeDropdown",queryType:"$between",options:o},"subscriptions1.subscribed":{fieldId:"subscriptions1.subscribed",filterId:"subscriptions1.subscribed",fieldName:"Display Criteria",filterFieldType:"dropdown",queryType:"$in",options:e.dispayCriteriaOptionsContact}}}},Se=n(53645),ke=n(90044),Ae=function(){return Ae=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Ae.apply(this,arguments)},Oe=function(e){var t=e.open,n=e.setOpen,a=e.action,i=e.module,l=e.subtitle,r=e.rows,o=e.columns,u=(0,s.useState)(!0),d=u[0],p=u[1],f=(0,s.useCallback)((function(e){d?(p(!1),ye=r):ye=e.selectedRows}),[d,r]);return(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)(v.Z,Ae({className:"mass-action-dialog-container",open:t,"aria-labelledby":"alert-dialog-title","aria-describedby":"alert-dialog-description"},{children:[(0,c.jsx)(b.Z,Ae({id:"alert-dialog-title"},{children:"".concat(a," ").concat(i)})),(0,c.jsxs)(N.Z,{children:[(0,c.jsx)("p",Ae({className:"subtitle"},{children:l})),(0,c.jsx)(ke.ZP,{columns:o,data:r,selectableRows:!0,selectableRowSelected:function(){return!0},onSelectedRowsChange:f})]}),(0,c.jsxs)(x.Z,{children:[(0,c.jsx)(A.z,{className:"cancel-button",onClick:function(){return n(!1)},text:"Cancel"}),(0,c.jsx)(A.z,{onClick:function(){return e=new CustomEvent("dci-subscribe-record",{detail:ye.map((function(e){return{recordId:e.id,sfid:"Accounts"===i?e.account_id:e.contact_id,subscribe:"Create"===a,gear_status:"Linking failed"===e.gear_status?"Subscribe":e.gear_status,crudType:"Create"===a?"Create":"Unlink"}}))}),window.dispatchEvent(e),void n(!1);var e},text:"".concat(a," ").concat(i)})]})]}))})},Te=n(74764),Ze=n(96540),Re=function(){return Re=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Re.apply(this,arguments)},Ie=function(e){return"Accounts"===e||"account"===e?[{name:"Name",value:"name"},{name:"Phone",value:"phone"},{name:"CRD#",value:"crd__c"}]:[{name:"Email",value:"email"},{name:"First Name",value:"firstname"},{name:"Last Name",value:"lastname"}]},Fe={Hubspot:{Accounts:{name:"name"},Contacts:{email:"email"}},Dynamo:{Accounts:{name:"DakotaAccountName"},Contacts:{email:"ContactInfo_Email"}},Satuit:{Accounts:{name:"cbusiness"},Contacts:{email:"ccemail"}},MS_Dynamics:{Accounts:{name:"name"},Contacts:{email:"emailaddress1"}}},Ee=function(e,t,n,c){var a=Fe[c][n][e];return a||(a=" "),a},De=function(e,t){if(!e)return[];var n=Object.keys(e[t.toLocaleLowerCase()]).map((function(n){return{name:e[t.toLocaleLowerCase()][n].label,value:n}})).sort((function(e,t){return(0,Te.Q)({objA:e,objB:t,property:"name"})}));return n.unshift({name:"None",value:" "}),n},Pe=function(){return Pe=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Pe.apply(this,arguments)},Be=function(e,t,n,c){return new(n||(n=Promise))((function(a,i){function s(e){try{r(c.next(e))}catch(e){i(e)}}function l(e){try{r(c.throw(e))}catch(e){i(e)}}function r(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,l)}r((c=c.apply(e,t||[])).next())}))},Me=function(e,t){var n,c,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(l){return function(r){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,l[0]&&(s=0)),s;)try{if(n=1,c&&(a=2&l[0]?c.return:l[0]?c.throw||((a=c.return)&&a.call(c),0):c.next)&&!(a=a.call(c,l[1])).done)return a;switch(c=0,a&&(l=[2&l[0],a.value]),l[0]){case 0:case 1:a=l;break;case 4:return s.label++,{value:l[1],done:!1};case 5:s.label++,c=l[1],l=[0];continue;case 7:l=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==l[0]&&2!==l[0])){s=0;continue}if(3===l[0]&&(!a||l[1]>a[0]&&l[1]<a[3])){s.label=l[1];break}if(6===l[0]&&s.label<a[1]){s.label=a[1],a=l;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(l);break}a[2]&&s.ops.pop(),s.trys.pop();continue}l=t.call(e,s)}catch(e){l=[6,e],c=0}finally{n=a=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,r])}}},Le=function(e,t){var n={};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&t.indexOf(c)<0&&(n[c]=e[c]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(c=Object.getOwnPropertySymbols(e);a<c.length;a++)t.indexOf(c[a])<0&&Object.prototype.propertyIsEnumerable.call(e,c[a])&&(n[c[a]]=e[c[a]])}return n},Ve=(0,g.ZP)(v.Z)((function(e){var t=e.theme;return{"& .MuiDialogContent-root":{padding:t.spacing(2)},"& .MuiDialogActions-root":{padding:t.spacing(1)}}}));function $e(e){var t=e.children,n=e.onClose,a=Le(e,["children","onClose"]);return(0,c.jsxs)(b.Z,Pe({sx:{m:0,p:2}},a,{children:[t,n?(0,c.jsx)(_.Z,Pe({"aria-label":"close",onClick:n,sx:{position:"absolute",right:8,top:8,color:function(e){return e.palette.grey[500]}}},{children:(0,c.jsx)(w.Z,{})})):null]}))}$e.propTypes={children:C().node,onClose:C().func.isRequired};var Ge={sfid:"",name:"",id:""},ze=function(e){var t,n=e.module,a=e.rows,i=e.open,d=e.setOpen,f=(0,l.$)().t,m=(0,r.CG)(T._p),h=(0,s.useState)(Ie(n)[0].value),g=h[0],v=h[1],b=(0,s.useState)(Ie(n)[0].value),_=b[0],j=b[1],C=(0,s.useState)(!1),w=C[0],k=(C[1],(0,r.CG)(o.c7)),O=(0,s.useState)(!1),Z=O[0],R=O[1],I=(0,s.useState)(!1),F=I[0],E=I[1],D=(0,s.useState)(!0),P=D[0],B=D[1],M=(0,s.useState)(a),L=M[0],V=M[1],$=(0,s.useState)(!0),G=$[0],z=$[1],U=(0,s.useState)(Se.r.INITIAL),q=U[0],H=U[1],W=(0,s.useState)(Ge),Q=W[0],Y=W[1],J=(0,r.CG)(o.xv),K=(0,r.CG)(o.dy).fieldMapping,X=function(e,t){return"Accounts"===e?[{name:"Dakota Account Record",cell:function(e){return(0,c.jsx)("div",Re({className:"cell-container"},{children:(0,c.jsx)(p.Z,Re({placement:"right",title:e.source_data},{children:(0,c.jsx)("p",{children:e.source_data})}))}))}},{name:"CRM Account Record",cell:function(e){return(0,c.jsx)("div",Re({className:"cell-container"},{children:(0,c.jsx)(p.Z,Re({placement:"right",title:e.target_data},{children:(0,c.jsx)("p",Re({className:e.sfid?""===e.sfid?"":"disabled_text":""},{children:e.target_data}))}))}))}},{name:"",cell:function(e){return(0,c.jsx)("div",Re({className:"cell-container"},{children:(0,c.jsx)("div",Re({className:"icon-container"},{children:(0,c.jsx)(Ze.Z,{onClick:function(){return t({sfid:e.account_id,name:e.name,id:e.id})}})}))}))},width:"15%"}]:[{name:"Dakota Contact Name",cell:function(e){return(0,c.jsx)("div",Re({className:"cell-container"},{children:(0,c.jsx)(p.Z,Re({placement:"right",title:e.source_data},{children:(0,c.jsx)("p",{children:e.source_data})}))}))}},{name:"Contact Name",cell:function(e){return(0,c.jsx)("div",Re({className:"cell-container"},{children:(0,c.jsx)(p.Z,Re({placement:"right",title:e.target_data},{children:(0,c.jsx)("p",{children:e.target_data})}))}))}},{name:"",cell:function(e){return(0,c.jsx)("div",Re({className:"cell-container"},{children:(0,c.jsx)("div",Re({className:"icon-container"},{children:(0,c.jsx)(Ze.Z,{onClick:function(){return t({sfid:e.contact_id,name:e.full_name,id:e.id})}})}))}))},width:"15%"}]}(n,Y),ee=(0,s.useCallback)((function(e){return Be(void 0,void 0,void 0,(function(){var t;return Me(this,(function(n){return t=e.detail,H(t),t===Se.r.SUCCESS?(V(L.filter((function(e){return e.id!==Q.id}))),Y(Ge)):t===Se.r.FAILURE&&Y(Ge),[2]}))}))}),[Q,L]);(0,s.useEffect)((function(){return window.addEventListener("dci-subscribe-record-status-change",ee),function(){return window.removeEventListener("dci-subscribe-record-status-change",ee)}}),[Q,L]),(0,s.useEffect)((function(){j(Ee(g,K,n,J))}),[g]);var te=(0,s.useCallback)((function(e){P?(B(!1),je=L):je=e.selectedRows,E(je.find((function(e){return Boolean(e.target_data&&!e.sfid)}))),z((null==je?void 0:je.length)>0)}),[P,L]),ne=function(e){"Create"===e[0].crudType&&"Creation failed"===je[0].gear_status&&(e[0].gear_status="Creation failed");var t=new CustomEvent("dci-subscribe-record",{detail:e});window.dispatchEvent(t)};return(0,c.jsxs)("div",{children:[Z?(0,c.jsxs)("div",Pe({className:"spinner"},{children:[" ",(0,c.jsx)(y.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]})):null,(0,c.jsxs)(Ve,Pe({onClose:function(){return d(!1)},"aria-labelledby":"customized-dialog-title",open:i,className:"multiple-link-view-top-container"},{children:[(0,c.jsx)($e,Pe({onClose:function(){return d(!1)}},{children:(0,c.jsx)("div",Pe({className:"main-title"},{children:f("Accounts"===n?"multiple-link.link-accounts":"multiple-link.link-contacts")}))})),(0,c.jsxs)(N.Z,Pe({dividers:!0},{children:[(0,c.jsxs)("div",Pe({className:"input-field"},{children:[(0,c.jsx)(u.L,{title:f("multiple-link.source-column-heading",{module:f("Accounts"===n?"account":"contact")}),value:g,options:Ie(n),onChange:v}),(0,c.jsx)(u.L,{title:f("multiple-link.target-column-heading",{module:f("Accounts"===n?"account":"contact")}),value:_,options:m?De(m,n):[],onChange:j,disabled:w}),(0,c.jsx)(A.z,{className:"search-button",onClick:function(){return Be(void 0,void 0,void 0,(function(){var e,t,c,a,i,s,l,r,o,u;return Me(this,(function(d){switch(d.label){case 0:if((null==je?void 0:je.length)<1)return[2];R(!0),d.label=1;case 1:d.trys.push([1,6,,7]),E(!1),e="Satuit"===J?40:100,t=Math.ceil(je.length/e),c=[],a=0,d.label=2;case 2:return a<t?(i=a*e,s=Math.min((a+1)*e,je.length),l=je.slice(i,s).map((function(e){return e.id})),[4,(0,S.wG)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1","/Search_crm_records/massSearch"),body:{client_id:k,module:n,target_field:_,source_field:g,ids:l},headers:(0,S.Ry)(k)})]):[3,5];case 3:r=d.sent(),c.push(r.data.data),d.label=4;case 4:return a++,[3,2];case 5:return o=c.flat(),V(L.map((function(e,t){var n=o[t].reference_id?o[t]:void 0;return(null==n?void 0:n.target_data)&&E(!0),Pe(Pe({},e),{target_data:(null==n?void 0:n.target_data)||"",reference_id:(null==n?void 0:n.reference_id)||"",sfid:(null==n?void 0:n.sfid)||"",crudType:"Link"})}))),[3,7];case 6:return u=d.sent(),console.log(u),[3,7];case 7:return R(!1),[2]}}))}))},text:f("multiple-link.search"),isDisabled:!G})]})),(0,c.jsxs)("div",Pe({className:"accounts-count"},{children:[f("Accounts"===n?"multiple-link.accounts":"multiple-link.contacts")," (",L.length,")"]})),(0,c.jsx)(ke.ZP,{columns:X,data:L,selectableRows:!0,selectableRowSelected:function(e){return null==je?void 0:je.find((function(t){return e.id===t.id}))},onSelectedRowsChange:te,noDataComponent:(0,c.jsx)("div",Pe({style:{padding:"24px",fontSize:"14px"}},{children:"There are no records to display"}))})]})),(0,c.jsxs)(x.Z,Pe({sx:{background:"#F3F2F2"}},{children:[(0,c.jsx)(A.z,{onClick:function(){return d(!1)},className:"detail-view-footer-cancel",text:f("modal.cancel")}),(0,c.jsx)(A.z,{className:"detail-view-footer-link",onClick:function(){var e=je.filter((function(e){return e.reference_id&&!e.sfid})).map((function(e){return t="Creation failed"===e.gear_status?"Subscribe":e.gear_status?e.gear_status:"Subscribe",{recordId:e.id,sfid:"Accounts"===n?e.account_id:e.contact_id,subscribe:!0,reference_id:e.reference_id,gear_status:t,crudType:"Link"}}));ne(e),d(!1)},isDisabled:!F,text:f("Accounts"===n?"multiple-link.link-accounts":"multiple-link.link-contacts")})]}))]})),Q.sfid&&(0,c.jsxs)(Ve,Pe({onClose:function(){H(Se.r.INITIAL),Y(Ge)},"aria-labelledby":"customized-dialog-title",open:i,className:"multiple-link-view-top-container create"},{children:[(0,c.jsx)($e,Pe({onClose:function(){H(Se.r.INITIAL),Y(Ge)}},{children:(0,c.jsx)("div",Pe({className:"main-title"},{children:"Create ".concat(f("Accounts"===n?"account":"contact"))}))})),(0,c.jsx)(N.Z,Pe({dividers:!0},{children:(0,c.jsx)("p",Pe({className:"subtitle"},{children:"Do you want to create a new record for ".concat(Q.name," ").concat(f("Accounts"===n?"account":"contact")," in ").concat(J," ").concat(""," CRM?")}))})),(0,c.jsxs)(x.Z,Pe({sx:{background:"#F3F2F2"}},{children:[(0,c.jsx)(A.z,{onClick:function(){H(Se.r.INITIAL),Y(Ge)},className:"detail-view-footer-cancel",text:f("modal.cancel")}),(0,c.jsx)(A.z,{className:"detail-view-footer-link",onClick:function(){ne([{recordId:Q.sfid,sfid:Q.sfid,subscribe:!0,crudType:"Create",gear_status:"Subscribe"}])},text:f("modal.create"),isDisabled:q===Se.r.REQUESTED})]}))]}))]})},Ue=function(){return Ue=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Ue.apply(this,arguments)},qe=[{name:"Name",cell:function(e){var t=e.full_name||"";return(0,c.jsx)("div",Ue({className:"cell-container"},{children:(0,c.jsx)(p.Z,Ue({placement:"right",title:t},{children:(0,c.jsx)("p",{children:t})}))}))}},{name:"Type",cell:function(e){var t=e.contact_type_c||"";return(0,c.jsx)("div",Ue({className:"cell-container"},{children:(0,c.jsx)(p.Z,Ue({placement:"right",title:t},{children:(0,c.jsx)("p",{children:t})}))}))}}],He={},We=n(14212),Qe=n(11855),Ye=function(){return Ye=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Ye.apply(this,arguments)},Je={},Ke=0,Xe="NONE",et="INTERMEDIATE",tt="ALL",nt=function(e){var t=e.contactData,n=e.setIsCreateButtonDisabled,a=(0,s.useState)(!0),i=a[0],l=a[1],r=(0,s.useState)({render:"render"}),o=r[0],u=r[1],d=(0,s.useState)(Xe),f=d[0],m=d[1],h=(0,s.useState)(Xe),g=h[0],v=h[1],b=(0,s.useState)(!0),_=b[0],x=b[1];(0,s.useEffect)((function(){x(!Object.values(t).some((function(e){return e.contacts.length>0})))}),[t]);var y=(0,s.useCallback)((function(e){Ke++,e.allSelected?m(tt):e.selectedCount>0?m(et):m(Xe),i?(l(!1),Je=Object.keys(t).reduce((function(e,n){var c;return Ye(Ye({},e),((c={})[n]={contacts:t[n].contacts,allSelected:!0},c))}),{})):(Je=e.selectedRows.reduce((function(e,n){var c;return Ye(Ye({},e),((c={})[n]=Je[n]||Ye(Ye({},Je[n]),{contacts:t[n].contacts}),c))}),{}),Ke%2==0&&u(Ye({},o)))}),[i,t]);(0,s.useEffect)((function(){n(f===Xe)}),[f]);var j=function(){var e=!0,t=!1;return Object.values(Je).forEach((function(n){n.allSelected||(e=!1),n.contacts.length>0&&(t=!0)})),e?tt:t?et:Xe},C=function(e,t,n,a){return a&&(He={}),[{name:"Account Name",cell:function(t){var n=e[t].accountDetails.name;return(0,c.jsx)("div",Ue({className:"cell-container"},{children:(0,c.jsx)(p.Z,Ue({placement:"right",title:n},{children:(0,c.jsx)("p",{children:n})}))}))},width:"252px"},{name:"Contacts",cell:function(a){return(0,c.jsx)("div",{children:e[a].contacts.length>0?(0,c.jsx)(ke.ZP,{title:"",columns:qe,data:e[a].contacts,noHeader:!0,noTableHead:!0,selectableRows:!0,onSelectedRowsChange:function(e){var t;e.allSelected&&(He=Ue(Ue({},He),((t={})[a]="added",t))),(e.selectedCount>0||He[a])&&n(e,a)},disabled:!Boolean(t[a]),selectableRowSelected:function(e){var n,c;return null===(c=null===(n=t[e.contact_account_id])||void 0===n?void 0:n.contacts)||void 0===c?void 0:c.some((function(t){return t.contact_id===e.contact_id}))},noDataComponent:"No Associated Contact"},"key1"):(0,c.jsx)("p",Ue({style:{marginLeft:"20px"}},{children:"No Associated Contact(s)"}))})}}]}(t,Je,(function(e,t){Je[t]&&(Je[t]={contacts:e.selectedRows,allSelected:e.allSelected}),v(j)}),i);return(0,c.jsxs)("div",Ye({className:"create_account_related_contact_mass"},{children:[(0,c.jsx)("div",Ye({className:"rdt_Table"},{children:(0,c.jsx)("div",Ye({className:"rdt_TableHead",role:"rowgroup"},{children:(0,c.jsxs)("div",Ye({className:"rdt_TableHeadRow table_head",role:"row"},{children:[(0,c.jsx)("div",Ye({className:"rdt_TableCol account_check"},{children:(0,c.jsx)(We.Z,{indeterminateIcon:(0,c.jsx)(Qe.Z,{style:{fill:"GrayText",boxShadow:"none"}}),indeterminate:f===et,checked:f===tt,onChange:function(){var e;y(f===tt?{allSelected:!1,selectedCount:0,selectedRows:[]}:{allSelected:!0,selectedCount:(e=Object.keys(t)).length,selectedRows:e})},style:{fontSize:"18px",cursor:"pointer",padding:"0px",marginTop:"1px",verticalAlign:"middle",position:"relative"}})})),(0,c.jsx)("div",Ye({"data-column-id":"1",className:"rdt_TableCol account_name"},{children:(0,c.jsx)("div",Ye({"data-column-id":"1","data-sort-id":"1",role:"columnheader",className:"rdt_TableCol_Sortable"},{children:(0,c.jsx)("div",Ye({"data-column-id":"1"},{children:"Account"}))}))})),(0,c.jsx)("div",Ye({className:"rdt_TableCol contact_check"},{children:(0,c.jsx)(We.Z,{indeterminateIcon:(0,c.jsx)(Qe.Z,{style:{fill:"GrayText",boxShadow:"none"}}),disabled:_||f!==tt,indeterminate:f===tt&&g===et,checked:f===tt&&g===tt,onChange:function(){g===tt?(Ke++,Je=Object.keys(t).reduce((function(e,t){var n;return Ye(Ye({},e),((n={})[t]={contacts:[],allSelected:!1},n))}),{}),Ke%2==0&&u(Ye({},o))):(Ke++,Je=Object.keys(t).reduce((function(e,n){var c;return Ye(Ye({},e),((c={})[n]={contacts:t[n].contacts,allSelected:!0},c))}),{}),Ke%2==0&&u(Ye({},o)))},style:{fontSize:"18px",cursor:"pointer",padding:"0px",marginTop:"1px",verticalAlign:"middle",position:"relative"}})})),(0,c.jsx)("div",Ye({"data-column-id":"2",className:"rdt_TableCol contact_name"},{children:(0,c.jsx)("div",Ye({"data-column-id":"2","data-sort-id":"2",role:"columnheader",className:"rdt_TableCol_Sortable"},{children:(0,c.jsx)("div",Ye({"data-column-id":"2"},{children:"Contact Name"}))}))})),(0,c.jsx)("div",Ye({"data-column-id":"2",className:"rdt_TableCol contact_title"},{children:(0,c.jsx)("div",Ye({"data-column-id":"2","data-sort-id":"2",role:"columnheader",className:"rdt_TableCol_Sortable"},{children:(0,c.jsx)("div",Ye({"data-column-id":"2"},{children:"Contact Title"}))}))}))]}))}))})),(0,c.jsx)(ke.ZP,{title:"",columns:C,data:Object.keys(t),selectableRows:!0,noHeader:!0,noTableHead:!0,selectableRowSelected:function(e){return Object.keys(Je).includes(e)},onSelectedRowsChange:y},"key")]}))},ct=function(){return ct=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},ct.apply(this,arguments)},at=function(e,t){var n={};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&t.indexOf(c)<0&&(n[c]=e[c]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(c=Object.getOwnPropertySymbols(e);a<c.length;a++)t.indexOf(c[a])<0&&Object.prototype.propertyIsEnumerable.call(e,c[a])&&(n[c[a]]=e[c[a]])}return n},it=function(e,t,n){if(n||2===arguments.length)for(var c,a=0,i=t.length;a<i;a++)!c&&a in t||(c||(c=Array.prototype.slice.call(t,0,a)),c[a]=t[a]);return e.concat(c||Array.prototype.slice.call(t))},st=(0,g.ZP)(v.Z)((function(e){var t=e.theme;return{"& .MuiDialogContent-root-mass":{padding:t.spacing(2)},"& .MuiDialogActions-root":{padding:t.spacing(1)}}}));function lt(e){var t=e.children,n=e.onClose,a=at(e,["children","onClose"]);return(0,c.jsxs)(b.Z,ct({sx:{m:0,p:2}},a,{children:[t,n?(0,c.jsx)(_.Z,ct({"aria-label":"close",onClick:n,sx:{position:"absolute",right:8,top:8,color:function(e){return e.palette.grey[500]}}},{children:(0,c.jsx)(w.Z,{})})):null]}))}lt.propTypes={children:C().node,onClose:C().func.isRequired};var rt=function(e){var t=e.open,n=e.setOpen,a=e.rows,i=(0,r.CG)(o.c7),u=(0,s.useState)(!1),d=u[0],p=u[1],f=(0,r.CG)(T.OY),m=(0,s.useState)(!0),h=m[0],g=m[1],v=(0,l.$)().t,b=function(){n(!1)},_=(0,s.useState)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1","/dakota"),body:"",headers:(0,S.Ry)(i)}),j=_[0],C=_[1],w=(0,s.useState)(a.reduce((function(e,t){var n;return ct(ct({},e),((n={})[t.account_id]={accountDetails:t,contacts:[]},n))}),{})),O=w[0],Z=w[1];return(0,s.useEffect)((function(){C(ct(ct({},j),{body:JSON.stringify({client_id:i,module:k.VB.contact,dc_plan_access_flag:f||!1,record_type:"Contacts",get_subscription:!0,filters:{filter:[{$and:[{accountid:{$in:a.map((function(e){return e.account_id}))}}]}],fields:it([],k.mw,!0),max_num:-1}})}))}),[]),(0,s.useEffect)((function(){j.body&&j&&(0,S.wG)(ct({},j)).then((function(e){var t,n;t=e.data.records.filter((function(e){return"t"!==e.subscription_status||"Creation failed"===e.gear_status||"Linking failed"===e.gear_status})),n=ct({},O),t.forEach((function(e){n[e.contact_account_id].contacts.push(e)})),Z(n),g(!1)})).catch((function(e){}))}),[j]),(0,c.jsxs)("div",{children:[h?(0,c.jsxs)("div",ct({className:"spinner"},{children:[" ",(0,c.jsx)(y.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]})):null,(0,c.jsxs)(st,ct({onClose:b,"aria-labelledby":"customized-dialog-title",open:t,className:"link-view-top-container-mass"},{children:[(0,c.jsx)(lt,ct({onClose:b},{children:(0,c.jsx)("div",ct({className:"main-title"},{children:"Add Account With Related Contact(s)"}))})),(0,c.jsxs)(N.Z,{children:[!h&&(0,c.jsxs)("p",ct({className:"subtitle"},{children:["There are ",(0,c.jsx)("strong",{children:"".concat(a.length)})," Account(s). Select records to create Contact(s) and it's related Account(s)."]})),(0,c.jsx)("div",ct({className:"data-table-container"},{children:!h&&(0,c.jsx)(nt,{contactData:O,setIsCreateButtonDisabled:function(e){p(e)}})}))]}),(0,c.jsxs)(x.Z,ct({sx:{background:"#F3F2F2"}},{children:[(0,c.jsx)(A.z,{onClick:b,className:"",text:v("modal.cancel")}),(0,c.jsx)(A.z,{onClick:function(){var e=Object.keys(Je),t=[];e.forEach((function(e){t.push.apply(t,Je[e].contacts)}));var n=[];t.forEach((function(t){var c={recordId:t.id,sfid:t.contact_id,subscribe:!0,eventModule:k.VB.contact,isFromCreateAccountAndRelatedContact:!0,alertCreateAccountAndRelatedContact:!0,totalAccountRecords:e.length,gear_status:t.gear_status,crudType:"CARC"};n.push(c)})),e.forEach((function(c){var i,s,l={recordId:(null===(i=a.find((function(e){return e.account_id===c})))||void 0===i?void 0:i.id)||"",sfid:c,subscribe:!0,eventModule:k.VB.account,isFromCreateAccountAndRelatedContact:!0,alertCreateAccountAndRelatedContact:0===e.length||0===t.length,totalAccountRecords:e.length,crudType:"CARC",gear_status:(null===(s=a.find((function(e){return e.account_id===c})))||void 0===s?void 0:s.gear_status)||null};n.push(l)}));var c=new CustomEvent("dci-subscribe-record",{detail:n});window.dispatchEvent(c),b()},className:"",text:v("modal.add_account_and_related_contacts"),isDisabled:d})]}))]}))]})},ot=function(){return ot=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},ot.apply(this,arguments)};function ut(e){var t,n,a,i,s=e.module,u=e.open,d=e.action,p=e.selectedRows,f=e.setOpen,m=(0,l.$)().t,h=(0,r.CG)(o.xv),g="MS_Dynamics"===h?"Microsoft Dynamics":h;return(0,c.jsxs)(c.Fragment,{children:[("create"===d||"unlink"===d)&&(0,c.jsxs)(c.Fragment,{children:[s.value===k.VB.account&&(0,c.jsx)(Oe,{open:u,setOpen:f,action:"".concat(null===(t=ft.find((function(e){return e.value===d})))||void 0===t?void 0:t.name),module:s.label,subtitle:m("subscriptions.mass-actions.subtitle",{count:p.selectedCount,module:m("subscriptions.mass-actions.account"),action:null===(n=ft.find((function(e){return e.value===d})))||void 0===n?void 0:n.value}),rows:p.selectedRows.sort((function(e,t){return(0,Te.Q)({objA:e,objB:t,property:"name"})})),columns:[ot(ot({},X[0]),{sortable:!1})]}),s.value===k.VB.contact&&(0,c.jsx)(Oe,{open:u,setOpen:f,action:"".concat(null===(a=ft.find((function(e){return e.value===d})))||void 0===a?void 0:a.name),module:s.label,subtitle:function(e,t,n){return"unlink"===t?m("subscriptions.mass-actions.subtitle_contact_unlink",{count:e,module:n,action:t,crmName:g}):m("subscriptions.mass-actions.subtitle_contact",{count:e,module:n,action:t})}(p.selectedCount,null===(i=ft.find((function(e){return e.value===d})))||void 0===i?void 0:i.value,m("subscriptions.mass-actions.contact")),rows:p.selectedRows.sort((function(e,t){return(0,Te.Q)({objA:e,objB:t,property:"name"})})),columns:[ot(ot({},ee[0]),{sortable:!1})]})]}),"link"===d&&(0,c.jsxs)(c.Fragment,{children:[s.value===k.VB.account&&(0,c.jsx)(ze,{module:s.label,rows:p.selectedRows.sort((function(e,t){return(0,Te.Q)({objA:e,objB:t,property:"name"})})).map((function(e){return ot(ot({},e),{source_data:e.name})})),open:u,setOpen:f}),s.value===k.VB.contact&&(0,c.jsx)(ze,{module:s.label,rows:p.selectedRows.sort((function(e,t){return(0,Te.Q)({objA:e,objB:t,property:"name"})})).map((function(e){return ot(ot({},e),{source_data:e.full_name})})),open:u,setOpen:f})]}),"create-account-and-related-contacts"===d&&(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(rt,{open:u,setOpen:f,rows:p.selectedRows})})]})}var dt=function(){return dt=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},dt.apply(this,arguments)},pt=function(e,t,n){if(n||2===arguments.length)for(var c,a=0,i=t.length;a<i;a++)!c&&a in t||(c||(c=Array.prototype.slice.call(t,0,a)),c[a]=t[a]);return e.concat(c||Array.prototype.slice.call(t))},ft=[{name:"None",value:"none"},{name:"Create",value:"create"},{name:"Link",value:"link"},{name:"Unlink",value:"unlink"}],mt=[{name:"None",value:"none"},{name:"Create Selected Contacts with Accounts",value:"create"},{name:"Link Selected Contacts to Existing Contacts",value:"link"},{name:"Unlink Contacts",value:"unlink"}],ht=[{name:"None",value:"none"},{name:"Create Accounts",value:"create"},{name:"Create Account & Related Contacts",value:"create-account-and-related-contacts"},{name:"Link Accounts",value:"link"},{name:"Unlink Accounts",value:"unlink"}],gt=function(e){var t=e.module,n=e.selectedRows,a=(0,l.$)().t,i=(0,r.CG)(o.xv),d="MS_Dynamics"===i?"Microsoft Dynamics":i,p=(0,r.TL)(),f=(0,s.useState)("none"),m=f[0],h=f[1],g=(0,s.useState)(!1),v=g[0],b=g[1],_=(0,s.useState)(Gt),x=_[0],y=_[1],j=(0,s.useState)(ft),C=j[0],w=j[1];return(0,s.useEffect)((function(){v||h("none")}),[v]),(0,s.useEffect)((function(){t.value===k.VB.account?(w(ft),w(ht)):w(mt)}),[t.value]),{MassActionDialog:v?(0,c.jsx)(ut,{module:{label:t.label,value:t.value||k.VB.account},open:v,setOpen:b,action:m,selectedRows:x}):(0,c.jsx)(c.Fragment,{}),MassActionDropdown:(0,c.jsx)(u.L,{title:a("subscriptions.tab-subtitle",{Module:t.value}),disabled:!n.selectedCount,value:m,options:C,onChange:function(e){return c=void 0,i=void 0,l=function(){var c,i,s,l,r,o,u,f,m,g,v,_,j;return function(e,t){var n,c,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(l){return function(r){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,l[0]&&(s=0)),s;)try{if(n=1,c&&(a=2&l[0]?c.return:l[0]?c.throw||((a=c.return)&&a.call(c),0):c.next)&&!(a=a.call(c,l[1])).done)return a;switch(c=0,a&&(l=[2&l[0],a.value]),l[0]){case 0:case 1:a=l;break;case 4:return s.label++,{value:l[1],done:!1};case 5:s.label++,c=l[1],l=[0];continue;case 7:l=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==l[0]&&2!==l[0])){s=0;continue}if(3===l[0]&&(!a||l[1]>a[0]&&l[1]<a[3])){s.label=l[1];break}if(6===l[0]&&s.label<a[1]){s.label=a[1],a=l;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(l);break}a[2]&&s.ops.pop(),s.trys.pop();continue}l=t.call(e,s)}catch(e){l=[6,e],c=0}finally{n=a=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,r])}}}(this,(function(C){return c=n.selectedRows.filter((function(t){return"unlink"===e?"t"===t.subscription_status:"t"!==t.subscription_status})),i=n.selectedRows.filter((function(e){return"t"!==e.subscription_status})),"unlink"===e?(s=c.filter((function(e){return R.h9.includes(e.gear_status)})),l=c.filter((function(e){return!R.h9.includes(e.gear_status)})),r=c.filter((function(e){return R.zV.includes(e.gear_status)})),o=i.length>0&&s.length>0?i.length+s.length:s.length,_=(_=c.filter((function(e){return R.Mo.includes(e.gear_status)}))).filter((function(e){return e.reference_id})),l.length>0&&0===_.length?(y(dt(dt({},x),{selectedCount:l.length,selectedRows:l})),b(!0),h(e)):r.length>0&&0===_.length?(y(dt(dt({},x),{selectedCount:r.length,selectedRows:r})),b(!0),h(e)):_.length>0&&l.length>0&&0===r.length?(u=pt(pt([],_,!0),l,!0),y(dt(dt({},x),{selectedCount:u.length,selectedRows:u})),b(!0),h(e)):_.length>0&&0===l.length&&r.length>0?(u=pt(pt([],_,!0),r,!0),y(dt(dt({},x),{selectedCount:u.length,selectedRows:u})),b(!0),h(e)):_.length>0&&0===l.length&&0===r.length?(y(dt(dt({},x),{selectedCount:_.length,selectedRows:_})),b(!0),h(e)):_.length>0&&l.length>0&&r.length>0?(u=pt(pt([],_,!0),l,!0),y(dt(dt({},x),{selectedCount:u.length,selectedRows:u})),b(!0),h(e)):o?p.setToastrState({subtitle:a("subscriptions.mass-actions.loading-state",{module:t.value,count:o,crmName:d}),severity:"info",autoHide:!0}):s.length>0?p.setToastrState({subtitle:a("subscriptions.mass-actions.loading-state",{module:t.value,count:s.length,crmName:d}),severity:"info",autoHide:!0}):i.length>0&&p.setToastrState({subtitle:a("subscriptions.mass-actions.no-record-selected",{module:t.value,action:"unlinked",count:i.length,crmName:d}),severity:"info",autoHide:!0})):(f=n.selectedRows.filter((function(e){return R.h9.includes(e.gear_status)})),m=f.filter((function(e){return!e.reference_id})),g=f.filter((function(e){return e.reference_id})),v=n.selectedRows.filter((function(e){return!R.h9.includes(e.gear_status)})),_=n.selectedRows.filter((function(e){return R.Mo.includes(e.gear_status)})),j=_.filter((function(e){return e.reference_id})),c.length>0?(y(dt(dt({},x),{selectedCount:c.length,selectedRows:c})),b(!0),h(e)):g.length>0&&m.length>0&&0===j.length?p.setToastrState({subtitle:a("subscriptions.mass-actions.syncing-record-selected",{module:t.value,action:"".concat("create"===e||"create-account-and-related-contacts"===e?"creation":"linking"),count:g.length+m.length,crmName:d}),severity:"info",autoHide:!0}):0===g.length&&m.length>0&&0===j.length?p.setToastrState({subtitle:a("subscriptions.mass-actions.syncing-record-selected",{module:t.value,action:"".concat("create"===e||"create-account-and-related-contacts"===e?"creation":"linking"),count:m.length,crmName:d}),severity:"info",autoHide:!0}):g.length>0&&0===m.length&&0===j.length?p.setToastrState({subtitle:a("subscriptions.mass-actions.syncing-record-selected",{module:t.value,action:"".concat("create"===e||"create-account-and-related-contacts"===e?"creation":"linking"),count:g.length,crmName:d}),severity:"info",autoHide:!0}):v.length>0&&j.length>0?p.setToastrState({subtitle:a("subscriptions.mass-actions.no-record-selected",{module:t.value,action:"".concat("create"===e||"create-account-and-related-contacts"===e?"created":"".concat(e,"ed")),count:v.length+j.length,crmName:d}),severity:"info",autoHide:!0}):0===v.length&&j.length>0?p.setToastrState({subtitle:a("subscriptions.mass-actions.no-record-selected",{module:t.value,action:"".concat("create"===e||"create-account-and-related-contacts"===e?"created":"".concat(e,"ed")),count:j.length,crmName:d}),severity:"info",autoHide:!0}):v.length>0&&0===j.length&&p.setToastrState({subtitle:a("subscriptions.mass-actions.no-record-selected",{module:t.value,action:"".concat("create"===e||"create-account-and-related-contacts"===e?"created":"".concat(e,"ed")),count:v.length,crmName:d}),severity:"info",autoHide:!0})),[2]}))},new((s=void 0)||(s=Promise))((function(e,t){function n(e){try{r(l.next(e))}catch(e){t(e)}}function a(e){try{r(l.throw(e))}catch(e){t(e)}}function r(t){var c;t.done?e(t.value):(c=t.value,c instanceof s?c:new s((function(e){e(c)}))).then(n,a)}r((l=l.apply(c,i||[])).next())}));var c,i,s,l}})}},vt=n(69941),bt=n(85092),_t=n(47425),xt=n(23508),yt=n(71190),jt=function(){return jt=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},jt.apply(this,arguments)},Ct=(0,g.ZP)(v.Z)((function(e){var t=e.theme;return{"& .MuiDialogContent-root":{padding:t.spacing(2)},"& .MuiDialogActions-root":{padding:t.spacing(1)}}})),wt=function(e){var t=e.children,n=e.onClose,a=function(e,t){var n={};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&t.indexOf(c)<0&&(n[c]=e[c]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(c=Object.getOwnPropertySymbols(e);a<c.length;a++)t.indexOf(c[a])<0&&Object.prototype.propertyIsEnumerable.call(e,c[a])&&(n[c[a]]=e[c[a]])}return n}(e,["children","onClose"]);return(0,c.jsxs)(b.Z,jt({sx:{textAlign:"center"}},a,{children:[t,n?(0,c.jsx)(_.Z,jt({"aria-label":"close",onClick:n,sx:{position:"absolute",right:8,top:8,color:function(e){return e.palette.grey[500]}}},{children:(0,c.jsx)(w.Z,{})})):null]}))},Nt={},St={};function kt(){var e=(0,r.TL)(),t=(0,s.useState)(!0),n=t[0],a=t[1],i=(0,s.useState)(Nt),u=i[0],p=i[1],f=(0,s.useState)(!1),h=f[0],g=f[1],v=(0,s.useState)(St),b=v[0],_=v[1],j=(0,s.useState)(!1),C=j[0],w=j[1],k=(0,r.CG)(m.pW),A=(0,r.CG)(m.uN),O=(0,r.CG)(m.lj),Z=(0,r.CG)(o.dy).id,R=(0,r.CG)(T.OY),I=(0,l.$)().t,F=function(){a(!1),e.setState({id:"",module:"",showModal:!1,name:""})};return(0,s.useEffect)((function(){g(!0),(0,S.D2)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1"),path:"/dakota",body:{client_id:Z,module:A,dc_plan_access_flag:R||!1,record_type:"".concat(A,"s"),filters:{filter:[{sfid:{$equals:k}}],fields:[],max_num:1}},headers:(0,S.Ry)(Z)}).then((function(e){e.data.records.length>0?p(e.data.records[0]):w(!0),g(!1)})),_("account"===A?yt.kx:yt.FC)}),[]),(0,c.jsx)("div",jt({className:"subscription-detail-container"},{children:C?(F(),w(!1),e.setToastrState({subtitle:I("modal.alert"),severity:"error",autoHide:!0}),null):(0,c.jsxs)(Ct,jt({onClose:F,"aria-labelledby":"customized-dialog-title",open:n,className:"detail-view-top-container"},{children:[(0,c.jsx)(wt,jt({id:"customized-dialog-title",onClose:F},{children:(0,c.jsx)("div",jt({className:"main-title"},{children:O}))})),(0,c.jsx)(N.Z,jt({sx:{minHeight:"200px",maxHeight:"500px",overflowY:"scroll"},dividers:!0},{children:h?(0,c.jsxs)("div",jt({className:"spinner"},{children:[" ",(0,c.jsx)(y.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]})):Object.keys(b).map((function(e){return(0,c.jsx)("div",jt({className:"subscription-detail"},{children:(0,c.jsxs)(vt.Z,jt({className:"accordion",defaultExpanded:!0},{children:[(0,c.jsx)(_t.Z,jt({className:"accordion-summary",expandIcon:(0,c.jsx)(xt.Z,{}),"aria-controls":"panel1bh-content",id:"panel1bh-header",sx:{background:"#F3F2F2"}},{children:(0,c.jsx)("span",jt({className:"title"},{children:e}))})),(0,c.jsx)(bt.Z,jt({className:"tile"},{children:Object.keys(b[e]).map((function(t){return(0,c.jsxs)("div",jt({className:"wrapper"},{children:[(0,c.jsx)("span",jt({className:"title"},{children:b[e][t].title})),b[e][t].fields.map((function(n){return(0,c.jsx)(c.Fragment,{children:u[n]?"text"===b[e][t].fieldType?(0,c.jsx)("p",jt({className:"value ".concat(n)},{children:yt.fx.includes(n)?$(u[n],u[yt.W$[n]]):b[e][t].format(u[n])})):(0,c.jsx)("div",jt({className:"link-container"},{children:(0,c.jsx)(d.r,{href:u[n],text:u[n]})})):yt.a5[n]?(0,c.jsx)("span",{style:{display:"none"}}):(0,c.jsx)("span",jt({className:"no-text"},{children:"'"}))})})),(0,c.jsx)("hr",{})]}))}))}))]}))}))}))})),(0,c.jsx)(x.Z,jt({sx:{background:"#F3F2F2"}},{children:(0,c.jsx)("button",jt({onClick:F,className:"detail-view-footer"},{children:I("modal.cancel")}))}))]}))}))}var At={account:{label:"Accounts",value:"account"},contact:{label:"Contacts",value:"contact"}},Ot=n(8103),Tt=n(55437),Zt=function(){return Zt=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Zt.apply(this,arguments)},Rt=function(e,t){var n={};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&t.indexOf(c)<0&&(n[c]=e[c]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(c=Object.getOwnPropertySymbols(e);a<c.length;a++)t.indexOf(c[a])<0&&Object.prototype.propertyIsEnumerable.call(e,c[a])&&(n[c[a]]=e[c[a]])}return n},It=(0,g.ZP)(v.Z)((function(e){var t=e.theme;return{"& .MuiDialogContent-root":{padding:t.spacing(2)},"& .MuiDialogActions-root":{padding:t.spacing(1)}}}));function Ft(e){var t=e.children,n=e.onClose,a=Rt(e,["children","onClose"]);return(0,c.jsxs)(b.Z,Zt({sx:{m:0,p:2}},a,{children:[t,n?(0,c.jsx)(_.Z,Zt({"aria-label":"close",onClick:n,sx:{position:"absolute",right:8,top:8,color:function(e){return e.palette.grey[500]}}},{children:(0,c.jsx)(w.Z,{})})):null]}))}Ft.propTypes={children:C().node,onClose:C().func.isRequired};var Et=Intl.NumberFormat("en-US");function Dt(e){var t=e.subscriptionStatus,n=e.onClose,a=e.stylingClassName,i=(0,l.$)().t,d=(0,r.CG)(o.c7),f=(0,s.useState)({}),m=f[0],h=f[1],g=(0,s.useState)(!1),v=g[0],b=g[1],_=(0,r.CG)(Ot.OW),j=_.sfid,C=_.module,w=_.name,O=_.phone,R=_.crd_number_c,I=_.email,F=(0,r.CG)(Ot.OW).gear_status,E=(0,s.useState)(),D=E[0],P=E[1],B=(0,s.useState)(!1),M=B[0],L=(B[1],(0,s.useState)(0)),V=L[0],$=L[1],z=(0,s.useState)(!0),U=z[0],q=z[1],H=(0,s.useState)(!0),W=H[0],Q=H[1],Y=(0,s.useState)("Create"),J=Y[0],K=Y[1],X=(0,s.useState)(Ie(C)[0].value),ee=X[0],te=X[1],ne=(0,s.useState)(Ie(C)[0].value),ce=ne[0],ae=ne[1],ie=(0,r.CG)(T._p),se=(0,s.useState)(!1),le=se[0],re=(se[1],(0,r.CG)(o.dy).fieldMapping),oe=(0,r.CG)(o.xv),ue=(0,s.useState)(""),de=ue[0],pe=ue[1],fe=(0,s.useState)(!1),me=fe[0],he=fe[1],ge=(0,s.useState)(""),ve=ge[0],be=ge[1],_e=function(e){return e?e.replace(/\b\w/g,(function(e){return e.toUpperCase()})):e};(0,s.useEffect)((function(){if(C&&ee){var e=_e(C),t=function(e,t){var n=Ie(e).find((function(e){return e.value===t}));return n?n.name:t}(C,ee),n=_e(t);be("Search ".concat(e," by ").concat(n))}}),[C,ee,ee]);var xe=function(){Se(w),n()};(0,s.useEffect)((function(){ae(Ee(ee,re,"account"===C?"Accounts":"Contacts",oe))}),[ee]);var ye={client_id:d,module:C===k.VB.account?"Accounts":"Contacts",value:m.value,property:ce,dakota_property:ee};(0,s.useEffect)((function(){if(C===k.VB.account);else if(m.value){var e=m.value,t=e.split(" "),n=t[t.length-1],c=e.split(" ")[0];"firstname"===ee?(ye.value=c,pe(c)):"lastname"===ee&&(ye.value=n,pe(n))}}),[ce,ee,w,m.value]);var je=(0,s.useState)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1","/Search_crm_records/singleSearch"),body:ye,headers:(0,S.Ry)(d)}),Ce=je[0],we=je[1],Ne=function(){"Satuit"===oe&&he(!1),"Creation failed"===F?"Link"===J&&(F="Subscribe"):F?"Create"===J&&(F="Subscribe"):F="Subscribe";var e=new CustomEvent("dci-subscribe-record",{detail:[{sfid:j,subscribe:!0,reference_id:D,gear_status:F,crudType:J}]});window.dispatchEvent(e)},Se=function(e){e.trim().length>0?Q(!1):Q(!0),b(!1),h(Zt(Zt({},m),{value:e}))};(0,s.useEffect)((function(){if("name"===ee)h({value:w||""}),Q(!(w&&w.length>0));else if("phone"===ee)h({value:O||""}),Q(!(O&&O.length>0));else if("crd__c"===ee)h({value:R||""}),Q(!(R&&R.length>0));else if("email"===ee)h({value:I||""}),Q(!(I&&I.length>0));else if("firstname"===ee){Q(!(w&&w.length>0));var e=w.split(" ")[0];pe(e),h({value:e||""})}else if("lastname"===ee){Q(!(w&&w.length>0));var t=w.split(" "),n=t[t.length-1];pe(n),h({value:n||""})}else h({value:w||""}),Q(!(w&&w.length>0))}),[w,O,R,I,ee]),(0,s.useEffect)((function(){we(Zt(Zt({},Ce),{body:Zt(Zt({},ye),{property:ce,dakota_property:ee,value:de||m.value}),headers:(0,S.Ry)(d)}))}),[ee,ce,w,m.value,de]);var ke=function(){d&&we(Zt(Zt({},Ce),{headers:(0,S.Ry)(d),body:Zt(Zt({},ye),{client_id:d})})),m.value.trim().length>0&&(b(!0),q(!1))};(0,s.useEffect)((function(){D&&Ne()}),[D,J]),(0,s.useEffect)((function(){"SUCCESS"===t&&xe()}),[t]);var Ae=[{name:"Name",cell:function(e){var t=e.name;return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:t},{children:(0,c.jsx)("p",{children:t})}))}))}},{name:"AUM",cell:function(e){return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:"$".concat(Et.format(Number(e.aum__c)))},{children:(0,c.jsx)("p",{children:"$".concat(Et.format(Number(e.aum__c)))})}))}))}},{name:"Type",cell:function(e){return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:e.type},{children:(0,c.jsx)("p",{children:e.type})}))}))}},{name:"CRD #",cell:function(e){return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:e.crd__c},{children:(0,c.jsx)("p",{children:e.crd__c})}))}))}},{name:"Actions",cell:function(e){return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(A.z,{onClick:function(){P(e.id),K("Link")},className:"link",isDisabled:e.sfid,text:e.sfid?i("single-link.linked"):i("single-link.link")})})}}],Oe=[{name:"Name",cell:function(e){var t=e.firstname||"",n=e.lastname||"",a=t.concat(" ",n).trim();return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:a},{children:(0,c.jsx)("p",{children:a})}))}))}},{name:"Account Name",cell:function(e){return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:e.account_name__c},{children:(0,c.jsx)("p",{children:e.account_name__c})}))}))}},{name:"Phone",cell:function(e){return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:e.phone},{children:(0,c.jsx)("p",{children:e.phone})}))}))}},{name:"Email",cell:function(e){return(0,c.jsx)("div",Zt({className:"cell-container"},{children:(0,c.jsx)(p.Z,Zt({placement:"right",title:e.email},{children:(0,c.jsx)("p",{children:e.email})}))}))}},{name:"Actions",cell:function(e){return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(A.z,{onClick:function(){P(e.id),K("Link")},className:"link",isDisabled:e.sfid,text:e.sfid?i("single-link.linked"):i("single-link.link")})})}}];return(0,c.jsxs)("div",{children:[M?(0,c.jsxs)("div",Zt({className:"spinner"},{children:[" ",(0,c.jsx)(y.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]})):null,(0,c.jsxs)(It,Zt({onClose:xe,"aria-labelledby":"customized-dialog-title",open:!0,className:a||"link-view-top-container"},{children:[(0,c.jsx)(Ft,Zt({onClose:xe},{children:(0,c.jsx)("div",Zt({className:"main-title"},{children:"Link ".concat((0,Te.f)(C),": ").concat(w)}))})),(0,c.jsxs)(N.Z,Zt({dividers:!0},{children:[(0,c.jsxs)("div",Zt({className:"input-field"},{children:[(0,c.jsx)(u.L,{title:i("multiple-link.source-column-heading",{module:i("account"===C?"account":"contact")}),value:ee,options:Ie(C),onChange:function(e){te(e),b(!1)}}),(0,c.jsx)(u.L,{title:i("multiple-link.target-column-heading",{module:i("account"===C?"account":"contact")}),value:ce,options:ie&&d?De(ie,"account"===C?"Accounts":"Contacts"):[],onChange:function(e){ae(e),b(!1)},disabled:le}),(0,c.jsx)(A.z,{className:"search-button",onClick:function(){ke(),q(!1)},text:i("single-link.search"),isDisabled:W})]})),(0,c.jsx)("div",Zt({className:"single-link-input-field"},{children:(0,c.jsx)(Tt.U,{value:m.value,onChange:function(e){return Se(e)},placeholder:ve,type:"text",adornment:"search",onEnterPressed:ke},"search")})),v?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",Zt({className:"accounts-count"},{children:"".concat(C===k.VB.account?"Accounts":"Contacts"," (").concat(V,")")})),(0,c.jsx)(Z.p,{title:"",columns:C===k.VB.account?Ae:Oe,requestData:Ce,dataPath:"data",page:0,setPage:function(){},isLoading:function(){return!1},loadData:!0,singlePageOnly:!0,onSinglePageCountChange:$,isSingleLink:!1})]}):null]})),(0,c.jsxs)(x.Z,Zt({sx:{background:"#F3F2F2"}},{children:[(0,c.jsx)(A.z,{onClick:function(){"Satuit"===oe?he(!0):(Ne(),xe())},className:"Satuit"===oe&&"account"===C?"detail-view-footer account":"Satuit"===oe&&"contact"===C?"detail-view-footer contact":"detail-view-footer",text:i("Satuit"===oe&&"account"===C?"modal.create_entity":"Satuit"===oe&&"contact"===C?"modal.create_contact":"modal.create"),isDisabled:U}),(0,c.jsx)(A.z,{onClick:xe,className:"detail-view-footer",text:i("modal.cancel")})]})),(0,c.jsx)(G.Z,{open:me,onClose:function(){he(!1)},onAction:Ne,description:"".concat(i("subscriptions.create-single-dialog-description")," ").concat(w," ").concat(C,"?"),title:i("subscriptions.create-dialog-title"),type:"create"})]}))]})}var Pt=n(95998),Bt=n(12036),Mt=n(44807),Lt=n(68097),Vt=function(){return Vt=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Vt.apply(this,arguments)},$t=function(e,t,n){if(n||2===arguments.length)for(var c,a=0,i=t.length;a<i;a++)!c&&a in t||(c||(c=Array.prototype.slice.call(t,0,a)),c[a]=t[a]);return e.concat(c||Array.prototype.slice.call(t))},Gt={allSelected:!1,selectedCount:0,selectedRows:[]},zt="id:ASC",Ut=function(e,t){return{filter:[],fields:e===k.VB.account?k.GA:k.HU,order_by:e===k.VB.account?"aum__c:desc":"name:asc",max_num:t,offset:0}},qt=function(e,t){return{module:e===k.VB.account?k.VB.account:k.VB.contact,get_subscription:!0,client_id:"",record_type:e===k.VB.account?"Accounts":"Contacts",dc_plan_access_flag:!1,filters:Ut(e,t)}},Ht=[];function Wt(e){var t,n=e.module,a=void 0===n?"account":n,i=(0,l.$)().t,u=(0,r.CG)(o.dy),d=u.id,p=u.client_setup_status,f=u.status,h=(0,r.CG)(m.Qx),g=(0,r.CG)(Ot.OW).showModal,v=(0,s.useState)(Gt),b=v[0],_=v[1],x=(0,s.useState)(!1),j=x[0],C=x[1],N=(0,s.useState)(!1),S=N[0],O=N[1],Z=(0,r.CG)(o.US).records_per_page,R=(0,s.useState)(Z),I=R[0],F=R[1],E=(0,r.CG)(T.xl),D=(0,r.TL)(),P=(0,Pt.v9)(T.N$),B=(0,Pt.v9)(o.xv),M="MS_Dynamics"===B?"Microsoft Dynamics":B,L=(0,r.CG)(T.OY),V=(0,s.useState)(""),$=V[0],G=V[1],z=(0,s.useState)(!1),U=z[0],q=z[1],H=(0,s.useState)(!1),W=H[0],Q=H[1],Y=(0,s.useState)({emptyData:"emptyData"}),J=Y[0],K=Y[1],te=(k.VB.account,(0,r.CG)(T.AF)),ne=(0,s.useState)(""),ce=ne[0],ae=ne[1],ie=(0,r.CG)(T.XI),se=(0,r.CG)(T.Fw),le=(0,r.CG)(T.zw),re=(0,s.useState)(Vt(Vt({},qt(a,I)),{client_id:d})),oe=re[0],ue=re[1],de=(0,s.useState)({account:k.YM.account,contact:k.YM.contact}),pe=de[0],fe=de[1],me=(0,s.useState)({account:{},contact:{}}),he=me[0],ge=me[1],ve=(0,Se.B)({clientId:d,module:a||k.VB.account}),be=ve.subscriptionRequestStatus,_e=ve.setRecordType,ye=gt({module:At[a],selectedRows:b}),je=ye.MassActionDialog,ke=ye.MassActionDropdown;(0,s.useEffect)((function(){_e(a||k.VB.account),G(""),F(I)}),[a]),(0,s.useEffect)((function(){ue((function(e){return Vt(Vt({},e),{filters:Vt(Vt({},e.filters),{max_num:I})})}))}),[I]),(0,s.useEffect)((function(){be===Se.r.REQUESTED&&(C(!0),_(Gt)),be!==Se.r.SUCCESS&&be!==Se.r.FAILURE||(ue(Vt({},oe)),C(!1))}),[be]);var Ae=(0,s.useMemo)((function(){return Ne({accountTypeOptions:(0,Bt.S$)(P.data.Accounts.type),metroOptions:(0,Bt.S$)(P.data.metro_area__c.name),stateOptions:(0,Bt.Pn)(P.data.Accounts.billingstate),contactAccountTypeOptions:(0,Bt.S$)(P.data.Contacts.account_type__c),assetClassCoverageOption:(0,Bt.S$)(P.data.Contacts.asset_class_coverage__c),contactTypeOptions:(0,Bt.S$)(P.data.Contacts.contact_type__c),mailingStateOptions:(0,Bt.Pn)(P.data.Contacts.mailingstate),contactMetroAreaNameOptions:(0,Bt.S$)(P.data.metro_area__c.name),marketPlaceCreatedDateOptions:Bt.al,dispayCriteriaOptionsAccount:Bt.FO,dispayCriteriaOptionsContact:Bt.wH})}),[P]);(0,s.useEffect)((function(){ue(Vt(Vt({},oe),{client_id:d,module:a===k.VB.account?k.VB.account:k.VB.contact,dc_plan_access_flag:L||!1,record_type:a===k.VB.account?"Accounts":"Contacts",filters:Vt(Vt({},oe.filters),{filter:(0,we.O)({filterFields:Ae[a||k.VB.account],filter:he[a||k.VB.account],additionalFields:Ht,globalSearchText:$.trim(),module:a}),fields:a===k.VB.account?$t($t([],k.GA,!0),Ht,!0):$t($t([],k.HU,!0),Ht,!0),order_by:a===k.VB.account?"".concat(X[pe.account.columnId-1].sortField,":").concat(pe.account.order,",").concat(zt):"".concat(ee[pe.contact.columnId-1].sortField,":").concat(pe.contact.order,",").concat(zt),offset:0})}))}),[J,L]),(0,r.N7)((function(){K(Vt({},J)),_(Gt)}),[a,d,he]),(0,s.useEffect)((function(){$.length>0?q(!0):q(!1),0===$.length&&Q(!1)}),[$]);var Oe=(0,s.useCallback)((function(){return f!==T.n$.INACTIVE}),[f]);(0,s.useEffect)((function(){Oe()?ie.includes("#/no-access")||ie.includes("/dashboard")||""===ie?(0,Mt.T)("/subscriptions.account"):9==p||ie.includes("#/widget")||(0,Mt.T)("/initial-setup"):(0,Mt.T)("/no-access");var e=ie.split(".");e.length>=0?ae(e[0]):ae("")}),[ie,p,Oe]);var Te=(0,s.useState)(!1),Ze=Te[0],Re=Te[1];return(0,s.useEffect)((function(){Re(-1===E||!!le)}),[te,E,le]),(0,c.jsxs)(c.Fragment,{children:[te&&(0,c.jsx)("div",Vt({className:"spinner-content-area"},{children:(0,c.jsxs)("div",Vt({className:"spinner"},{children:[" ",(0,c.jsx)(y.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]}))})),(0,c.jsx)("div",{className:"lock-header-top"}),(0,c.jsxs)("div",Vt({className:"lock-header-add-to-crm"},{children:[(0,c.jsxs)("div",Vt({className:"page-heading"},{children:[(0,c.jsxs)("div",Vt({className:"records-total flex"},{children:[(0,c.jsx)("p",Vt({className:"title"},{children:"".concat(null===(t=At[a])||void 0===t?void 0:t.label," (").concat(-1!==E?E:"...",")")})),(0,c.jsx)("p",Vt({className:"subtitle"},{children:i("subscriptions.subtitle",{crmName:M})}))]})),(0,c.jsx)(Tt.U,{value:$,onChange:function(e){G(e)},placeholder:"Search Records",onEnterPressed:function(){K(Vt({},J)),_(Gt),Q(!0)},adornment:U?void 0:"search"}),U&&(0,c.jsx)("div",{children:(0,c.jsx)(w.Z,{className:"close-icon",onClick:function(){return G(""),void(W&&K(Vt({},J)))}})})]})),(0,c.jsx)("hr",{className:"page-heading-hr ".concat(se?"collapsed":"")}),(0,c.jsxs)("span",Vt({className:"mass-action-dropdown-container"},{children:[ke,d&&P.status===T.n$.LOADED&&(0,c.jsx)(A.z,{text:i("refresh-button"),onClick:function(){return D.setIsRefreshButtonClicked(!0),void D.setIsLoadingState(!0)},className:"refresh-icon",isDisabled:Ze})]}))]})),(0,c.jsxs)("div",Vt({className:"subscription-data-table-container"},{children:[d&&P.status===T.n$.LOADED&&(0,c.jsx)(Ce.x,{filterFields:Object.values(Ae[a||k.VB.account]),filter:he[a||k.VB.account],setFilter:function(e){var t;ge(Vt(Vt({},he),((t={})[a||k.VB.account]=e,t)))},disableFields:S,isRefresh:Ze},a),(0,c.jsx)(xe,{module:a||k.VB.account,totalRows:E,requestBody:oe,setRequestBody:ue,clearSelection:j,setSelection:_,sortBy:pe,setSortBy:fe,emptyData:J,isLoading:O,additionalFields:$t([],Ht,!0),paginationPerPage:function(e){F(e)}}),je]})),(0,c.jsx)("div",Vt({className:"lock-header-add-to-crm"},{children:(0,c.jsx)(Lt.H,{className:["#/initial-setup","#/widget","#/no-access"].includes(ce)?"display-none":""})})),h?(0,c.jsx)(kt,{}):null,g?(0,c.jsx)(Dt,{subscriptionStatus:be,onClose:function(){return D.setShowLinkModal(!1)}}):null]})}var Qt=function(){return Qt=Object.assign||function(e){for(var t,n=1,c=arguments.length;n<c;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Qt.apply(this,arguments)},Yt=function(e){var t=e.module,n=void 0===t?"account":t,s=(0,r.CG)(T.Fw);return(0,c.jsxs)("div",Qt({className:"drawer-page-wrapper"},{children:[(0,c.jsx)(i.d,{}),(0,c.jsx)(a.ZP,Qt({container:!0,className:"".concat(s?"collapsed":""," page-with-drawer subscriptions-page")},{children:(0,c.jsx)(a.ZP,Qt({item:!0,xs:12,className:"main-section"},{children:(0,c.jsx)(Wt,{module:Object.keys(At).find((function(e){return e===n}))})}))}))]}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,