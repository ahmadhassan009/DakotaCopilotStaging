(self.webpackChunkcrm_integration=self.webpackChunkcrm_integration||[]).push([[551],{95626:function(e,t,n){"use strict";var a=n(87537),i=n.n(a),s=n(23645),r=n.n(s)()(i());r.push([e.id,".icon-container{width:47px;height:fit-content;margin-top:auto;margin-bottom:auto}.icon-container svg{margin-top:auto;margin-bottom:auto;min-width:20px;min-height:20px}.icon-container-disabled{width:47px;height:fit-content;margin-top:auto;margin-bottom:auto}.icon-container-disabled svg{margin-top:auto;margin-bottom:auto;min-height:20px;min-width:20px}","",{version:3,sources:["webpack://./src/app/features/field-mapping/components/field-mapping-table/components/field-data-table/components/CreateCustomFields.scss"],names:[],mappings:"AAAA,gBACI,UAAA,CACA,kBAAA,CACA,eAAA,CACA,kBAAA,CACA,oBACI,eAAA,CACA,kBAAA,CACA,cAAA,CACA,eAAA,CAIR,yBACI,UAAA,CACA,kBAAA,CACA,eAAA,CACA,kBAAA,CACA,6BACI,eAAA,CACA,kBAAA,CACA,eAAA,CACA,cAAA",sourcesContent:[".icon-container {\r\n    width: 47px;\r\n    height: fit-content;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    svg {\r\n        margin-top: auto;\r\n        margin-bottom: auto;\r\n        min-width: 20px;\r\n        min-height: 20px;\r\n    }\r\n}\r\n\r\n.icon-container-disabled {\r\n    width: 47px;\r\n    height: fit-content;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    svg {\r\n        margin-top: auto;\r\n        margin-bottom: auto;\r\n        min-height: 20px;\r\n        min-width: 20px;\r\n    }\r\n}\r\n"],sourceRoot:""}]),t.Z=r},13453:function(e){e.exports='<svg viewBox="0 0 39 39" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M30 10.5V9C30 7.34315 28.6569 6 27 6H7C5.34315 6 4 7.34315 4 9V29C4 30.6569 5.34315 32 7 32H10.5" stroke="#767676" stroke-width="1.5"></path><rect x="9.75" y="9.75" width="24.5" height="24.5" rx="2.25" stroke="#767676" stroke-width="1.5"></rect><rect x="21" y="16" width="2" height="12" fill="#6C7DCF"></rect><rect x="28" y="21" width="2" height="12" transform="rotate(90 28 21)" fill="#6C7DCF"></rect></svg>'},79148:function(e){e.exports='<svg viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M26 4H7C5.34315 4 4 5.34315 4 7V26C4 27.6569 5.34315 29 7 29H26C27.6569 29 29 27.6569 29 26V7C29 5.34315 27.6569 4 26 4Z" fill="#98ADF3"></path><rect x="10.7227" y="8.82715" width="21.8333" height="21.8333" rx="1.25" fill="#697CD9" stroke="#6F7DC5" stroke-width="1.5"></rect><rect x="20.7422" y="14.3594" width="1.79487" height="10.7692" fill="white"></rect><rect x="27.0234" y="18.8467" width="1.79487" height="10.7692" transform="rotate(90 27.0234 18.8467)" fill="white"></rect></svg>'},84475:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var a=n(85893),i=n(44347),s=n(97920),r=n(67294),l=n(22327),c=function(){return c=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},c.apply(this,arguments)};function o(e){var t=e.title,n=(e.placeholder,e.value),o=e.required,d=void 0!==o&&o,u=e.disabled,f=void 0!==u&&u,p=(e.type,e.inputProps,e.error),m=void 0!==p&&p,h=e.options,g=e.onChange,v=(0,r.useState)(m),_=v[0],b=v[1],x=(0,r.useState)(""),y=(x[0],x[1]),j=(0,l.$)().t;return(0,r.useEffect)((function(){b(m)}),[m]),(0,r.useEffect)((function(){y(_&&d?j("required-field"):"")}),[_]),(0,a.jsxs)("div",c({className:"dropdown-container"},{children:[(0,a.jsxs)("p",c({className:"dropdown-title"},{children:[d&&(0,a.jsx)("span",{children:"*"}),t]})),(0,a.jsx)(s.Z,c({className:"dropdown",labelId:"demo-simple-select-label",id:"demo-simple-select",value:n,label:"",onChange:function(e){return g(e.target.value)},disabled:f},{children:h.map((function(e){return(0,a.jsx)(i.Z,c({value:e.value,disabled:e.isDisabled},{children:e.name}))}))}))]}))}},80227:function(e,t,n){"use strict";n.d(t,{m:function(){return c}});var a=n(85893),i=n(62640),s=n(44656),r=n(34934),l=function(){return l=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},l.apply(this,arguments)};function c(e){var t=e.tabs,n=e.value,c=e.type,o=void 0===c?"default":c,d=e.onChange;return(0,a.jsx)("div",l({className:"".concat("buttons"===o?"buttons":""," tabs-container")},{children:(0,a.jsx)(s.Z,l({className:"tabs",value:n},{children:t.map((function(e){return(0,a.jsxs)("span",l({onClick:function(){return d(e)},className:"tab-container ".concat(n===e.index?"active":"")},{children:[(0,a.jsx)(r.Z,{src:e.logo||""}),(0,a.jsx)(i.Z,{className:"tab",label:e.label})]}))}))}))}))}},31551:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return fe}});var a=n(85893),i=n(15725),s=n(54718),r=n(67294),l=n(22327),c=n(80227),o=n(1435),d=n(60343),u=n(21588),f=n(44807),p=n(71190),m=n(90952),h=function(){return h=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},h.apply(this,arguments)};function g(e){var t=e.module,n=(0,l.$)().t,i=(0,o.CG)(d.TR),s=(0,o.CG)(d.xv),c=(0,o.CG)(d.dy),g=c.client_setup_status,v=c.newMappings,_=c.fieldMapping,b=(0,o.TL)(),x=(0,o.CG)(m.mH),y=(0,o.CG)(m.qd),j=(0,o.CG)(m.R8);(0,r.useEffect)((function(){b.setModuleName(t)}),[t]);var A=v[s].accounts["Account Details"].data,C=v[s].contacts.Default.data,N=_[s].accounts["Account Details"].data,k=_[s].contacts.Default.data,O=[],S=[],w=[],D=[];p.Jl.forEach((function(e){var t=e.label,n=A.find((function(e){return e.dakota_field_label===t})),a=n?n.target_crm_field_name:null,i=N.find((function(e){return e.dakota_field_label===t})),s=i?i.target_crm_field_name:null;"none"===a&&O.push(t),"none"===s&&w.push(t)})),p.mg.forEach((function(e){var t=e.label,n=C.find((function(e){return e.dakota_field_label===t})),a=n?n.target_crm_field_name:null,i=k.find((function(e){return e.dakota_field_label===t})),s=i?i.target_crm_field_name:null;"none"===a&&S.push(t),"none"===s&&D.push(t)}));var F=function(){if(0===O.length&&"accounts"===t)b.saveFieldsMapping();else if(0===S.length&&"contacts"===t)b.saveFieldsMapping();else{var e="Mapping is required for these Account fields: ".concat(O.join(", "),"."),n="Mapping is required for these Contact fields: ".concat(S.join(", "),".");O.length>0?b.setToastrState({subtitle:e,severity:"error",autoHide:!0}):S.length>0&&b.setToastrState({subtitle:n,severity:"error",autoHide:!0})}};return(0,a.jsxs)(a.Fragment,{children:[9==g&&(0,a.jsxs)("span",h({className:"bottom-buttons"},{children:[(0,a.jsx)(u.z,{isDisabled:i===d.n$.LOADING||i===d.n$.NOT_FOUND,text:n("cancel-button"),onClick:function(){!function(){if(9==g&&0===O.length&&0===S.length&&j&&-1!==x&&-1!==y)(0,f.T)("/dashboard");else{var e="Mapping is required for these Account fields: ".concat(O.join(", "),"."),a="Mapping is required for these Contact fields: ".concat(S.join(", "),".");O.length>0&&w.length>0?b.setToastrState({subtitle:e,severity:"error",autoHide:!0}):(!t||"accounts"===t)&&w.length>0?0===w.length&&0===S.length?(0,f.T)("/dashboard"):-1===x&&b.setToastrState({subtitle:n("field-mapping.required_fields.cancelButton_failure_message_accounts"),severity:"error",autoHide:!0}):S.length>0&&D.length>0?b.setToastrState({subtitle:a,severity:"error",autoHide:!0}):"contacts"===t?0===D.length?(0,f.T)("/dashboard"):-1===y&&b.setToastrState({subtitle:n("field-mapping.required_fields.cancelButton_failure_message_contacts"),severity:"error",autoHide:!0}):0===w.length&&0===D.length&&(0,f.T)("/dashboard")}}()}}),(0,a.jsx)(u.z,{isDisabled:i===d.n$.LOADING||i===d.n$.NOT_FOUND,text:n("save-button"),onClick:function(){F()}})]})),9!=g&&(0,a.jsxs)("span",h({className:"bottom-buttons"},{children:[(0,a.jsx)(u.z,{isDisabled:i===d.n$.LOADING||i===d.n$.NOT_FOUND,text:n("back"),onClick:function(){return b.setSetupStatus(Number(g)-1)}}),(0,a.jsx)(u.z,{isDisabled:i===d.n$.LOADING||i===d.n$.NOT_FOUND,text:n("next"),onClick:function(){F()}})]}))]})}var v=n(9573),_=n(38732),b=n(46926),x=n(97896),y=n(56011),j=n(3694),A=n(84475),C={Hubspot:{accounts:{crmFields:{sfid:!0},syncOptions:{sfid:!0}},contacts:{crmFields:{email:!0,sfid:!0},syncOptions:{email:!0,sfid:!0}}},Dynamo:{accounts:{crmFields:{},syncOptions:{}},contacts:{crmFields:{},syncOptions:{}}},Satuit:{accounts:{crmFields:{billingcity:!0},syncOptions:{}},contacts:{crmFields:{},syncOptions:{}}},MS_Dynamics:{accounts:{crmFields:{},syncOptions:{}},contacts:{crmFields:{},syncOptions:{}}}},N=n(27304),k=n(34934),O=n(13453),S=n.n(O),w=n(79148),D=n.n(w),F=n(93379),Z=n.n(F),T=n(7795),M=n.n(T),H=n(90569),G=n.n(H),L=n(3565),I=n.n(L),$=n(19216),q=n.n($),E=n(44589),P=n.n(E),B=n(95626),R={};R.styleTagTransform=P(),R.setAttributes=I(),R.insert=G().bind(null,"head"),R.domAPI=M(),R.insertStyleElement=q(),Z()(B.Z,R),B.Z&&B.Z.locals&&B.Z.locals;var U=n(90506),z=n(75986),V=function(){return V=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},V.apply(this,arguments)},J=function(e){var t=e.field,n=e.module,i=e.setLoading,s=e.category,c=e.index,u=(0,o.CG)(d.dy).id,f=(0,o.TL)(),p=(0,o.CG)(d.xv),m=(0,l.$)().t,h=(0,r.useState)(!1),g=h[0],v=h[1],_="MS_Dynamics"===p?"Microsoft Dynamics":p,b=(0,r.useState)(!1),x=b[0],y=b[1];return(0,a.jsxs)(a.Fragment,{children:[!t.Created&&!g&&(0,a.jsx)(N.Z,V({title:m("create_custom_field.tooltip_create_field",{fieldName:t.dakota_field_label,crmName:_}),placement:"right"},{children:(0,a.jsx)("div",V({className:"icon-container"},{children:(0,a.jsx)(k.Z,{src:D(),onClick:function(){return y(!0)},"aria-disabled":!0})}))})),(g||t.Created)&&(0,a.jsx)(N.Z,V({title:"Hubspot"===p&&"Contacts"===n.label&&"email"===t.dakota_field_name?m("create_custom_field.tooltip_disable_email"):m("create_custom_field.tooltip_field_isCreated",{fieldName:t.dakota_field_label,crmName:_}),placement:"right"},{children:(0,a.jsx)("div",V({className:"icon-container-disabled"},{children:(0,a.jsx)(k.Z,{src:S()})}))})),(0,a.jsx)(z.Z,{open:x,onClose:function(){y(!1)},onAction:function(){y(!1),i&&i(!0),(0,U.wG)({method:"post",url:"".concat("https://marketplace-as-a-service.herokuapp.com/index.php/api/v1","/crm/create_custom_fields"),body:{client_id:u,module:n.label,fields:["".concat(t.dakota_field_name)]},headers:(0,U.Ry)(u)}).then((function(e){if("success"===e.data.status){var a=e.data.vardef[p],r=a.companies,l=a.contacts;f.setTargetCrmVardefsAfterFieldCreation({accounts:r,contacts:l});var o=JSON.parse(JSON.parse(e.data.mapping)),d="Accounts"===n.label?"accounts":"contacts",u="Accounts"===n.label?s:"Default",h=o[p][d][u].data.find((function(e){return e.dakota_field_name===t.dakota_field_name}));if(h){var g=h.target_crm_field_name;n.value&&f.setNewFieldsMapping({moduleName:n.value,category:s,index:c,updatedProperty:"target_crm_field_name",newMapping:{dakotaFieldName:t.dakota_field_name,targetedCRMFieldName:g,Created:!0}})}v(!0),setTimeout((function(){i&&i(!1),f.setToastrState({subtitle:m("create_custom_field.field-created-successfully"),severity:"success",autoHide:!0})}),100)}else f.setToastrState({subtitle:m("create_custom_field.field-creation-error"),severity:"error",autoHide:!0}),i&&i(!1)})).catch((function(e){console.log(e),i&&i(!1),f.setToastrState({subtitle:m("create_custom_field.something_went_wrong"),severity:"error",autoHide:!0})}))},description:m("create_custom_field.conformation_create_field",{fieldName:t.dakota_field_label,crmName:_}),title:"".concat(m("create_custom_field.create_custom_field_title"),": Dakota ").concat(t.dakota_field_label),type:"create"})]})},K=function(){return K=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},K.apply(this,arguments)},Q=function(e,t,n){if(n||2===arguments.length)for(var a,i=0,s=t.length;i<s;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))},W={name:"--None--",value:"none"};function X(e){var t=e.data,n=e.module,i=e.category,c=e.allData,u=e.setIsLoading,f=e.setShowLoadingSpinner,p=e.updateSpinner,h=(0,l.$)().t,g=(0,o.CG)(m._p),x=(0,o.CG)(d.TR),y=(0,r.useState)(!0),k=y[0],O=y[1],S=(0,r.useState)(!0),w=S[0],D=S[1],F=(0,r.useState)({none:W}),Z=F[0],T=F[1],M=(0,r.useState)({}),H=M[0],G=M[1],L=(0,r.useState)({}),I=L[0],$=L[1],q=(0,o.TL)(),E=(0,o.CG)(d.xv),P=["Account Name","Reference ID","AUM","Account Type","CRD#","First Name","Last Name","Email","Phone","Account ID"];(0,r.useEffect)((function(){g&&(O(!1),u&&u(!1),p&&p(!1))}),[]),(0,r.useEffect)((function(){g&&0!==Object.keys(g).length&&n.value&&H&&D(!1)}),[g,c,n.value,H]),(0,r.useEffect)((function(){g&&0!==Object.keys(g).length&&n.value&&T(K({none:W},Object.keys(g[n.value]).reduce((function(e,t){var a;return n.value?K(K({},e),((a={})[t]={value:t,name:g[n.value][t].label},a)):K({},e)}),{})))}),[g,n.value]),(0,r.useEffect)((function(){G(K({},c.reduce((function(e,t){var n;return K(K({},e),((n={})[t.dakota_field_name]=t.target_crm_field_name,n))}),{}))),$(K({},c.reduce((function(e,t){var n;return K(K({},e),((n={})[t.dakota_field_name]=t.sync_option,n))}),{})))}),[c]);var B=function(e,t,a,s){n.value&&q.setNewFieldsMapping({moduleName:n.value,category:i,index:s,updatedProperty:e,newMapping:{dakotaFieldName:a.dakota_field_name,targetedCRMFieldName:t}})},R=function(e,t,a){var i,s=[];return g&&n&&n.value&&(s=Q([],Object.values(Z).filter((function(e){var a,i=(a=e.value,!Object.values(H).includes(a));return i&&(i=e.value!==W.value),i&&(i=function(e,t,n){var a=n[e][t].modificationMetadata;return null==a||!a.readOnlyValue}(n.value||"",e.value,g)),i&&(i="MS_Dynamics"===E?function(e,n,a){return!!(e&&e[n]&&e[n][a]&&(e[n][a].type||e[n][a].fieldType))&&("None"===e[n][a].type?t.includes(e[n][a].fieldType):t.includes(e[n][a].type||e[n][a].fieldType))}(g,n.value||"",e.value):function(e,n,a){return t.includes(e[n][a].type)}(g,n.value||"",e.value)),i})),!0),H[e]!==W.value&&s.push({name:0!==Object.keys(g).length&&H&&H[e]&&g[n.value][H[e]]?null===(i=g[n.value][H[e]])||void 0===i?void 0:i.label:"",value:H[e]}),s.sort((function(e,t){return e.name>t.name?1:t.name>e.name?-1:0}))),[K({},W)].concat(s)};return(0,a.jsx)(v.Z,K({stickyHeader:!0,"aria-label":"sticky table"},{children:(0,a.jsxs)(_.Z,{children:[k&&(0,a.jsx)("div",K({className:"spinner-content-area"},{children:(0,a.jsxs)("div",K({className:"spinner"},{children:[" ",(0,a.jsx)(s.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]}))})),w&&(0,a.jsx)("div",K({className:"spinner-content-area"},{children:(0,a.jsxs)("div",K({className:"spinner"},{children:[" ",(0,a.jsx)(s.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]}))})),!k&&!w&&t.map((function(e,t){var s=P.includes(e.dakota_field_label);return(0,a.jsxs)(j.Z,{children:[(0,a.jsx)(b.Z,K({align:"center",colSpan:1},{children:(0,a.jsxs)("div",K({style:{display:"flex",alignItems:"center"}},{children:[s&&(0,a.jsx)(N.Z,K({title:h("required_field")},{children:(0,a.jsx)("span",K({className:"asterick-icon-conatiner"},{children:"*"}))})),(0,a.jsx)("span",{children:e.dakota_field_label})]}))})),(0,a.jsx)(b.Z,K({align:"center",colSpan:1},{children:(0,a.jsxs)("div",K({style:{display:"flex"}},{children:[(0,a.jsx)(A.L,{title:"",options:R(e.dakota_field_name,e.compatible_target_crm_field_types),value:H[e.dakota_field_name]||W.value,onChange:function(n){B("target_crm_field_name",n,e,t)},disabled:x===d.n$.LOADING||x===d.n$.NOT_FOUND||C[E][n.value].crmFields[e.dakota_field_name]},"".concat(e.dakota_field_name,"-field")),("Hubspot"===E||"MS_Dynamics"===E)&&(0,a.jsx)(J,{field:e,module:n,setLoading:f,category:i,index:t})]}))})),(0,a.jsx)(b.Z,K({align:"center",colSpan:1},{children:(0,a.jsx)(A.L,{title:"",options:[{name:h("field-mapping.sync-options.update"),value:"update"},{name:h("field-mapping.sync-options.dont-update"),value:"dont update"},{name:h("field-mapping.sync-options.update-empty"),value:"update when empty"}],value:I[e.dakota_field_name]||W.value,onChange:function(n){return B("sync_option",n,e,t)},disabled:x===d.n$.LOADING||x===d.n$.NOT_FOUND||C[E][n.value].syncOptions[e.dakota_field_name]},"".concat(e.dakota_field_name,"-sync-option"))}))]},e.dakota_field_name)}))]})}))}var Y=n(69941),ee=n(85092),te=n(47425),ne=n(23508),ae=function(){return ae=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},ae.apply(this,arguments)},ie=function(e,t,n){if(n||2===arguments.length)for(var a,i=0,s=t.length;i<s;i++)!a&&i in t||(a||(a=Array.prototype.slice.call(t,0,i)),a[i]=t[i]);return e.concat(a||Array.prototype.slice.call(t))};function se(e){var t=e.data,n=e.module,i=e.setLoading,s=(0,r.useMemo)((function(){return Object.keys(t)}),[t]),c=(0,r.useState)(s.reduce((function(e,t){var n;return ae(ae({},e),((n={})[t]=!1,n))}),{})),o=c[0],d=c[1],u=(0,r.useState)([]),f=u[0],p=u[1],m=(0,l.$)().t;return(0,r.useEffect)((function(){p(Object.keys(t).reduce((function(e,n){return ie(ie([],e,!0),t[n].data,!0)}),[]))}),[t]),(0,a.jsx)(a.Fragment,{children:s.map((function(e){var s,r="Account Details"===e;return(0,a.jsxs)(Y.Z,ae({className:"accordion",expanded:o[e],onChange:(s=e,function(e,t){var n;d(ae(ae({},o),((n={})[s]=t,n)))})},{children:[(0,a.jsx)(te.Z,ae({className:"accordion-summary",expandIcon:(0,a.jsx)(ne.Z,{}),"aria-controls":"panel1bh-content",id:"panel1bh-header"},{children:(0,a.jsx)("div",ae({style:{display:"flex",alignItems:"center"}},{children:r?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(N.Z,ae({title:m("required_sections")},{children:(0,a.jsx)("span",ae({className:"accordion-asterick-icon-conatiner"},{children:"*"}))})),(0,a.jsx)(N.Z,ae({title:m("required_sections")},{children:(0,a.jsx)("div",{children:e})}))]}):(0,a.jsx)("div",{children:e})}))})),(0,a.jsx)(ee.Z,ae({className:"accordion-details"},{children:o[e]&&(0,a.jsx)(X,{allData:f,data:t[e].data,module:n,category:e,setShowLoadingSpinner:i})}))]}),e)}))})}var re=function(){return re=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},re.apply(this,arguments)},le="Default";function ce(e){var t=e.module,n=e.fieldMapping,i=e.setIsLoading,c=e.updateSpinner,u=(0,r.useState)(!1),f=u[0],p=u[1],m=(0,o.CG)(d.dy).authentication_credentials.crm_name,h=(0,l.$)().t,g=function(e){p(e)};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(x.Z,re({className:"table-container",sx:{maxHeight:440}},{children:(0,a.jsxs)(v.Z,re({stickyHeader:!0,"aria-label":"sticky table"},{children:[(0,a.jsx)(y.Z,{children:(0,a.jsxs)(j.Z,{children:[(0,a.jsx)(b.Z,re({className:"table-cell",align:"left",colSpan:1},{children:h("field-mapping.table-columns.".concat(t.value,".marketplace-fields"))})),(0,a.jsx)(b.Z,re({className:"table-cell",align:"left",colSpan:1},{children:h("field-mapping.table-columns.".concat(t.value,".crm-fields"))})),(0,a.jsx)(b.Z,re({className:"table-cell",align:"left",colSpan:1},{children:h("field-mapping.table-columns.".concat(t.value,".sync-option"))}))]})}),(0,a.jsx)(_.Z,{children:(0,a.jsx)(j.Z,{children:(0,a.jsxs)(b.Z,re({className:"accordion-cell",align:"center",scope:"row",colSpan:3},{children:[f&&(0,a.jsx)("div",re({className:"spinner-content-area"},{children:(0,a.jsxs)("div",re({className:"spinner"},{children:[" ",(0,a.jsx)(s.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]}))})),t.value&&(Object.keys(n[m][t.value]).includes(le)?(0,a.jsx)(X,{allData:n[m][t.value][le].data,data:n[m][t.value][le].data,module:t,category:le,setIsLoading:i,setShowLoadingSpinner:g,updateSpinner:c}):(0,a.jsx)(se,{data:re({},n[m][t.value]),module:t,setLoading:g}))]}))})})]}))}))})}var oe=function(){return oe=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},oe.apply(this,arguments)};function de(){var e=(0,l.$)().t,t=(0,o.CG)(d.dy),n=t.newMappings,i=t.client_setup_status,u=t.fieldMapping,f=(0,o.CG)(d.TR),h=(0,r.useState)({index:0,label:e("accounts"),value:"accounts"}),v=h[0],_=h[1],b=[{index:0,label:e("accounts"),value:"accounts"},{index:1,label:e("contacts"),value:"contacts"}],x=(0,o.TL)(),y=(0,r.useState)(!0),j=(y[0],y[1]),A=(0,o.CG)(d.xv),C=(0,r.useState)(!0),N=C[0],k=C[1],O=(0,o.CG)(m.mH),S=(0,o.CG)(m.qd);return(0,o.CG)(m.r2),(0,r.useEffect)((function(){x.resetFieldsMapping()}),[v]),(0,r.useEffect)((function(){1==i&&_(b[0]),2==i&&_(b[1])}),[i]),(0,r.useEffect)((function(){"accounts"===v.value&&k(!0)})),(0,a.jsxs)(a.Fragment,{children:[9==i&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("span",oe({className:"configurations-header"},{children:(0,a.jsx)("p",oe({className:"bold"},{children:e("headings.field-mapping")}))})),(0,a.jsx)("span",oe({className:"top-buttons"},{children:(0,a.jsx)(c.m,{tabs:b,value:v.index,type:"buttons",onChange:function(t){var a=n[A].accounts["Account Details"].data,i=n[A].contacts.Default.data,s=u[A].accounts["Account Details"].data,r=u[A].contacts.Default.data,l=[],c=[],o=[],d=[];p.Jl.forEach((function(e){var t=e.label,n=a.find((function(e){return e.dakota_field_label===t})),i=n?n.target_crm_field_name:null,r=s.find((function(e){return e.dakota_field_label===t})),c=r?r.target_crm_field_name:null;"none"===i&&l.push(t),"none"===c&&o.push(t)})),p.mg.forEach((function(e){var t=e.label,n=i.find((function(e){return e.dakota_field_label===t})),a=n?n.target_crm_field_name:null,s=r.find((function(e){return e.dakota_field_label===t})),l=s?s.target_crm_field_name:null;"none"===a&&c.push(t),"none"===l&&d.push(t)}));var f="Mapping is required for these Account fields: ".concat(l.join(", "),"."),m="Mapping is required for these Contact fields: ".concat(c.join(", "),".");l.length>0&&o.length>0?x.setToastrState({subtitle:f,severity:"error",autoHide:!0}):(!v.value||"accounts"===v.value)&&o.length>0?-1===O&&x.setToastrState({subtitle:e("field-mapping.required_fields.tabSave_failure_message_accounts"),severity:"error",autoHide:!0}):(!v.value||"accounts"===v.value)&&d.length>0&&c.length>0?(_(t),v.value&&x.setModuleName(v.value),"Hubspot"!==A&&"MS_Dynamics"!==A||(x.setFieldMappingsAfterFieldCreation(n),x.saveCustomFields())):c.length>0&&d.length>0?x.setToastrState({subtitle:m,severity:"error",autoHide:!0}):"contacts"===v.value?0===o.length&&0===d.length?(_(t),v.value&&x.setModuleName(v.value),"Hubspot"!==A&&"MS_Dynamics"!==A||(x.setFieldMappingsAfterFieldCreation(n),x.saveCustomFields())):-1===S&&x.setToastrState({subtitle:e("field-mapping.required_fields.tabSave_failure_message_contacts"),severity:"error",autoHide:!0}):(0===o.length&&d.length,_(t),v.value&&x.setModuleName(v.value),"Hubspot"!==A&&"MS_Dynamics"!==A||(x.setFieldMappingsAfterFieldCreation(n),x.saveCustomFields()))}})}))]}),n&&(0,a.jsx)(ce,{module:v,fieldMapping:n,setIsLoading:function(e){j(e)},updateSpinner:function(e){k(e)}}),("accounts"===v.value&&n||"contacts"===v.value&&n&&!N)&&(0,a.jsx)(g,{module:v.value}),(f===d.n$.LOADING||!n)&&(0,a.jsx)("div",oe({className:"spinner-content-area"},{children:(0,a.jsxs)("div",oe({className:"spinner"},{children:[" ",(0,a.jsx)(s.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]}))}))]})}var ue=function(){return ue=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},ue.apply(this,arguments)},fe=function(){return(0,a.jsx)(i.ZP,ue({container:!0,className:"field-mapping-page"},{children:(0,a.jsx)(i.ZP,ue({item:!0,xs:12,className:"main-section"},{children:(0,a.jsx)(de,{})}))}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,