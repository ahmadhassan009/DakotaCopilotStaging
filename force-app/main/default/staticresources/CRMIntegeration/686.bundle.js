"use strict";(self.webpackChunkcrm_integration=self.webpackChunkcrm_integration||[]).push([[686],{18037:function(e,n,t){var s=t(64836);n.Z=void 0;var i=s(t(61268)),a=t(85893),r=(0,i.default)((0,a.jsx)("path",{d:"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"CheckCircleOutline");n.Z=r},11686:function(e,n,t){t.r(n),t.d(n,{default:function(){return G}});var s=t(85893),i=t(15725),a=t(67294),r=t(68983),l=t(1435),c=t(60343),o=t(16961),u=t(44807),d=t(22327),m=t(64666),x=t(77750),f=t(63366),h=t(87462),p=t(86010),j=t(94780),g=t(61974),b=t(16122),v=t(2658),y=t(1588),Z=t(34867);function N(e){return(0,Z.Z)("MuiDialogContentText",e)}(0,y.Z)("MuiDialogContentText",["root"]);const w=["children","className"],C=(0,g.ZP)(v.Z,{shouldForwardProp:e=>(0,g.FO)(e)||"classes"===e,name:"MuiDialogContentText",slot:"Root",overridesResolver:(e,n)=>n.root})({});var S=a.forwardRef((function(e,n){const t=(0,b.Z)({props:e,name:"MuiDialogContentText"}),{className:i}=t,a=(0,f.Z)(t,w),r=(e=>{const{classes:n}=e,t=(0,j.Z)({root:["root"]},N,n);return(0,h.Z)({},n,t)})(a);return(0,s.jsx)(C,(0,h.Z)({component:"p",variant:"body1",color:"text.secondary",ref:n,ownerState:a,className:(0,p.Z)(r.root,i)},t,{classes:r}))})),P=t(37645),k=t(18037),T=t(16086),M=function(){return M=Object.assign||function(e){for(var n,t=1,s=arguments.length;t<s;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e},M.apply(this,arguments)};function z(e){var n=a.useState(!0),t=n[0],i=n[1],r=(0,l.CG)(T.Ru),c=(0,l.CG)(T.Q7);return(0,s.jsx)("div",{children:(0,s.jsxs)(m.Z,M({className:"alert-dialog-box",open:t,onClose:function(e,n){"backdropClick"!==n&&i(!1)},"aria-labelledby":"alert-dialog-title","aria-describedby":"alert-dialog-description"},{children:[(0,s.jsx)("div",M({className:"alert-dialog-logo"},{children:(0,s.jsx)(k.Z,{className:"logo"})})),(0,s.jsx)("div",M({className:"alert-dialog-title"},{children:(0,s.jsx)(P.Z,M({id:"alert-dialog-title"},{children:(0,s.jsx)("span",M({className:"title"},{children:r}))}))})),(0,s.jsx)("div",M({className:"alert-dialog-description"},{children:(0,s.jsx)(x.Z,{children:(0,s.jsx)(S,M({id:"alert-dialog-description"},{children:c}))})}))]}))})}var D=t(54718),F=function(){return F=Object.assign||function(e){for(var n,t=1,s=arguments.length;t<s;t++)for(var i in n=arguments[t])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e},F.apply(this,arguments)},O=a.lazy((function(){return Promise.all([t.e(587),t.e(162),t.e(429)]).then(t.bind(t,41846))})),R=a.lazy((function(){return Promise.all([t.e(587),t.e(994),t.e(677),t.e(551)]).then(t.bind(t,31551))})),G=function(){var e=this,n=(0,d.$)().t,t=(0,a.useState)(!1),m=t[0],x=t[1],f=(0,a.useState)(o.a[0]),h=f[0],p=f[1],j=(0,l.CG)(c.dy).client_setup_status,g=(0,l.CG)(c.dy),b=(0,l.TL)(),v=(0,l.CG)(T.zq),y=(0,a.useState)(-1),Z=y[0],N=y[1],w={0:4e3,3:4e3};return(0,a.useEffect)((function(){var n,t,s,i;9===j&&(n=e,t=void 0,i=function(){return function(e,n){var t,s,i,a,r={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(l){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a&&(a=0,l[0]&&(r=0)),r;)try{if(t=1,s&&(i=2&l[0]?s.return:l[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,l[1])).done)return i;switch(s=0,i&&(l=[2&l[0],i.value]),l[0]){case 0:case 1:i=l;break;case 4:return r.label++,{value:l[1],done:!1};case 5:r.label++,s=l[1],l=[0];continue;case 7:l=r.ops.pop(),r.trys.pop();continue;default:if(!((i=(i=r.trys).length>0&&i[i.length-1])||6!==l[0]&&2!==l[0])){r=0;continue}if(3===l[0]&&(!i||l[1]>i[0]&&l[1]<i[3])){r.label=l[1];break}if(6===l[0]&&r.label<i[1]){r.label=i[1],i=l;break}if(i&&r.label<i[2]){r.label=i[2],r.ops.push(l);break}i[2]&&r.ops.pop(),r.trys.pop();continue}l=n.call(e,r)}catch(e){l=[6,e],s=0}finally{t=i=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,c])}}}(this,(function(e){switch(e.label){case 0:return b.setDialogState({title:"Install Complete",description:"You'll now be redirected to Add To CRM",showDialog:!0}),[4,new Promise((function(e){return setTimeout(e,4e3)}))];case 1:return e.sent(),b.resetDialogState(),(0,u.T)("/dashboard"),[2]}}))},new((s=void 0)||(s=Promise))((function(e,a){function r(e){try{c(i.next(e))}catch(e){a(e)}}function l(e){try{c(i.throw(e))}catch(e){a(e)}}function c(n){var t;n.done?e(n.value):(t=n.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,l)}c((i=i.apply(n,t||[])).next())})))}),[j]),(0,a.useEffect)((function(){var e=setTimeout((function(){N(j),v&&b.resetDialogState()}),Number(j)>Z&&w["".concat(Z)]||1);return function(){return clearTimeout(e)}}),[v,j]),(0,a.useEffect)((function(){Z>0&&x(!0)}),[Z]),(0,a.useEffect)((function(){var e=o.a.find((function(e){return e.name===g.authentication_credentials.crm_name}))||o.a[0];p(e)}),[g]),(0,s.jsxs)(s.Fragment,{children:[0==Z&&(0,s.jsxs)(s.Fragment,{children:[v?(0,s.jsx)(z,{}):null,m?(0,s.jsxs)(i.ZP,F({container:!0,className:"initial-setup-page"},{children:[(0,s.jsx)(i.ZP,{item:!0,xs:1,sm:1,md:1,xl:2}),(0,s.jsx)(i.ZP,F({item:!0,xs:10,sm:10,md:10,xl:8,className:"main-section"},{children:(0,s.jsx)(r.t,{crm:h,resetCRM:function(){x(!1)}})})),(0,s.jsx)(i.ZP,{item:!0,xs:1,sm:1,md:1,xl:2})]})):(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",F({className:"connect-your-crm-sidebar"},{children:(0,s.jsx)("p",F({className:"selection-title"},{children:n("crmSelection.title")}))})),(0,s.jsxs)(i.ZP,F({className:"initial-setup-page"},{children:[(0,s.jsx)(i.ZP,{item:!0,xs:1,sm:1,md:1,xl:2}),(0,s.jsx)(i.ZP,F({item:!0,xs:10,sm:10,md:10,xl:8,className:"main-section"},{children:(0,s.jsx)(o.Q,{setCRMSelected:x,setSelectedCRM:p})})),(0,s.jsx)(i.ZP,{item:!0,xs:1,sm:1,md:1,xl:2})]}))]})]}),1==Z&&(0,s.jsxs)(s.Fragment,{children:[v?(0,s.jsx)(z,{}):null,(0,s.jsx)(a.Suspense,F({fallback:(0,s.jsx)("div",F({className:"spinner"},{children:(0,s.jsx)(D.Z,{size:"medium",variant:"base",assistiveText:{label:""}})}))},{children:(0,s.jsx)(R,{})})),(0,s.jsxs)("span",F({className:"configurations-header"},{children:[(0,s.jsx)("p",F({className:"bold"},{children:n("initial-setup.heading")})),(0,s.jsx)("p",{children:n("initial-setup.field-mapping-account")})]}))]}),2==Z&&(0,s.jsxs)(s.Fragment,{children:[v?(0,s.jsx)(z,{}):null,(0,s.jsx)(a.Suspense,F({fallback:(0,s.jsx)("div",F({className:"spinner"},{children:(0,s.jsx)(D.Z,{size:"medium",variant:"base",assistiveText:{label:""}})}))},{children:(0,s.jsx)(R,{})})),(0,s.jsxs)("span",F({className:"configurations-header"},{children:[(0,s.jsx)("p",F({className:"bold"},{children:n("initial-setup.heading")})),(0,s.jsx)("p",{children:n("initial-setup.field-mapping-contact")})]}))]}),3==Z&&(0,s.jsxs)(s.Fragment,{children:[v?(0,s.jsx)(z,{}):null,(0,s.jsx)(a.Suspense,F({fallback:(0,s.jsxs)("div",F({className:"spinner"},{children:[" ",(0,s.jsx)(D.Z,{size:"medium",variant:"base",assistiveText:{label:""}})]}))},{children:(0,s.jsx)(O,{})})),(0,s.jsxs)("span",F({className:"configurations-header"},{children:[(0,s.jsx)("p",F({className:"bold"},{children:n("initial-setup.heading")})),(0,s.jsx)("p",{children:n("initial-setup.configurations")}),(0,s.jsx)("p",F({style:{color:"#697cd8",marginLeft:"10px"}},{children:n("additional-settings.comming-soon")}))]}))]})]})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,